(function(e){function a(a){for(var n,r,m=a[0],u=a[1],i=a[2],p=0,c=[];p<m.length;p++)r=m[p],Object.prototype.hasOwnProperty.call(l,r)&&l[r]&&c.push(l[r][0]),l[r]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(e[n]=u[n]);s&&s(a);while(c.length)c.shift()();return o.push.apply(o,i||[]),t()}function t(){for(var e,a=0;a<o.length;a++){for(var t=o[a],n=!0,r=1;r<t.length;r++){var m=t[r];0!==l[m]&&(n=!1)}n&&(o.splice(a--,1),e=u(u.s=t[0]))}return e}var n={},r={index:0},l={index:0},o=[];function m(e){return u.p+"js/"+({VideoTutorials:"VideoTutorials",VisualScripts:"VisualScripts",about:"about",documentation:"documentation",javascript:"javascript",javascript_sampleScripts:"javascript_sampleScripts",main:"main"}[e]||e)+"."+{VideoTutorials:"792730e0",VisualScripts:"074a5fc6",about:"c5450eb8",documentation:"1ac9ce48",javascript:"c79a002d",javascript_sampleScripts:"af5cd0ab",main:"b1e29f62"}[e]+".js"}function u(a){if(n[a])return n[a].exports;var t=n[a]={i:a,l:!1,exports:{}};return e[a].call(t.exports,t,t.exports,u),t.l=!0,t.exports}u.e=function(e){var a=[],t={VideoTutorials:1,VisualScripts:1,documentation:1,javascript:1,javascript_sampleScripts:1,main:1};r[e]?a.push(r[e]):0!==r[e]&&t[e]&&a.push(r[e]=new Promise((function(a,t){for(var n="css/"+({VideoTutorials:"VideoTutorials",VisualScripts:"VisualScripts",about:"about",documentation:"documentation",javascript:"javascript",javascript_sampleScripts:"javascript_sampleScripts",main:"main"}[e]||e)+"."+{VideoTutorials:"578dec7d",VisualScripts:"af11b0ec",about:"31d6cfe0",documentation:"c0dbe3fe",javascript:"cb04ed8b",javascript_sampleScripts:"80258b37",main:"61a9a11b"}[e]+".css",l=u.p+n,o=document.getElementsByTagName("link"),m=0;m<o.length;m++){var i=o[m],p=i.getAttribute("data-href")||i.getAttribute("href");if("stylesheet"===i.rel&&(p===n||p===l))return a()}var c=document.getElementsByTagName("style");for(m=0;m<c.length;m++){i=c[m],p=i.getAttribute("data-href");if(p===n||p===l)return a()}var s=document.createElement("link");s.rel="stylesheet",s.type="text/css",s.onload=a,s.onerror=function(a){var n=a&&a.target&&a.target.src||l,o=new Error("Loading CSS chunk "+e+" failed.\n("+n+")");o.code="CSS_CHUNK_LOAD_FAILED",o.request=n,delete r[e],s.parentNode.removeChild(s),t(o)},s.href=l;var d=document.getElementsByTagName("head")[0];d.appendChild(s)})).then((function(){r[e]=0})));var n=l[e];if(0!==n)if(n)a.push(n[2]);else{var o=new Promise((function(a,t){n=l[e]=[a,t]}));a.push(n[2]=o);var i,p=document.createElement("script");p.charset="utf-8",p.timeout=120,u.nc&&p.setAttribute("nonce",u.nc),p.src=m(e);var c=new Error;i=function(a){p.onerror=p.onload=null,clearTimeout(s);var t=l[e];if(0!==t){if(t){var n=a&&("load"===a.type?"missing":a.type),r=a&&a.target&&a.target.src;c.message="Loading chunk "+e+" failed.\n("+n+": "+r+")",c.name="ChunkLoadError",c.type=n,c.request=r,t[1](c)}l[e]=void 0}};var s=setTimeout((function(){i({type:"timeout",target:p})}),12e4);p.onerror=p.onload=i,document.head.appendChild(p)}return Promise.all(a)},u.m=e,u.c=n,u.d=function(e,a,t){u.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:t})},u.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(e,a){if(1&a&&(e=u(e)),8&a)return e;if(4&a&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(u.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var n in e)u.d(t,n,function(a){return e[a]}.bind(null,n));return t},u.n=function(e){var a=e&&e.__esModule?function(){return e["default"]}:function(){return e};return u.d(a,"a",a),a},u.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},u.p="/",u.oe=function(e){throw console.error(e),e};var i=window["webpackJsonp"]=window["webpackJsonp"]||[],p=i.push.bind(i);i.push=a,i=i.slice();for(var c=0;c<i.length;c++)a(i[c]);var s=p;o.push([0,"chunk-vendors"]),t()})({0:function(e,a,t){e.exports=t("56d7")},"034f":function(e,a,t){"use strict";t("85ec")},"56d7":function(e,a,t){"use strict";t.r(a);t("e260"),t("e6cf"),t("cca6"),t("a79d");var n=t("2b0e"),r=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},l=[],o=(t("034f"),t("2877")),m={},u=Object(o["a"])(m,r,l,!1,null,null,null),i=u.exports,p=(t("d3b7"),t("3ca3"),t("ddb0"),t("b0c0"),t("8c4f")),c=function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("div",[n("div",{staticClass:"home"},[n("router-link",{attrs:{to:"/"}},[n("img",{attrs:{alt:"DrawJS logo",src:t("b0ae")}})]),n("br"),n("br"),n("div",{staticClass:"textBig"},[e._v("DrawJS is a free online image editor")]),n("br"),n("div",[n("router-link",{staticClass:"btn btn-danger btn-lg",attrs:{to:"/image-editor",role:"button"}},[e._v("Launch image editor")])],1),n("br"),n("br"),n("div",[n("b",[n("router-link",{attrs:{to:"/docs"}},[e._v("Documentation")])],1)]),n("br"),n("br"),n("div",{staticClass:"div_features"},[n("div",{staticClass:"textBig"},[e._v("Features")]),n("div",[n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Draw using your mouse or with scripts (Javascript or Visual Script)")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Layers and masks")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Color filters")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Upload and transform images")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Upload and use custom fonts")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Crop images")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" More than 150 sample scripts that you can use and modify")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Create and save your own scripts (Javascript or Visual Script)")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Configure UI params for your scripts")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Create your own filters")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Create your own custom brushes")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Global variables to share between your scripts")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Export to PNG")],1),n("div",[n("IconCheck",{attrs:{color:"#008800"}}),e._v(" Full support to Javascript and HTML5 canvas")],1)])]),n("br"),n("br"),n("div",[e._m(0),e._m(1),e._m(2),n("a",{staticClass:"btn btn-danger",attrs:{href:"https://danielbarral.itch.io/drawjs/donate",role:"button",target:"_blank"}},[n("IconDonate",{attrs:{color:"#ffffff"}}),e._v(" Donate")],1)])],1),n("br"),n("br")])},s=[function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("a",{attrs:{href:"https://www.youtube.com/channel/UC6MPzpvbIs1x2HtoM83fVcQ",target:"_blank"}},[n("img",{staticStyle:{width:"32px","margin-right":"8px"},attrs:{src:t("aaba")}})])},function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("a",{attrs:{href:"https://www.reddit.com/r/DrawJS/",target:"_blank"}},[n("img",{staticStyle:{width:"32px","margin-right":"8px"},attrs:{src:t("8f63")}})])},function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("a",{attrs:{href:"https://danielbarral.itch.io/drawjs",target:"_blank"}},[n("img",{staticStyle:{width:"32px","margin-right":"8px"},attrs:{src:t("e004")}})])}],d=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",width:"18px",height:"18px",fill:"#000000"}},[t("path",{attrs:{d:"M0 0h24v24H0z",fill:"none"}}),t("path",{attrs:{fill:e.color,d:"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"}})])},y=[],f={name:"IconCheck",props:{color:{type:String,default:"#000000"}}},x=f,g=Object(o["a"])(x,d,y,!1,null,"70c043f5",null),h=g.exports,b=t("960a"),w={name:"Home",components:{IconCheck:h,IconDonate:b["a"]}},S=w,F=(t("cccb"),Object(o["a"])(S,c,s,!1,null,null,null)),_=F.exports,V=t("ffc9");n["a"].use(p["a"]);for(var C=[{path:"/",name:"Home",meta:{title:"DrawJS - Free online image editor"},component:_},{path:"/image-editor",name:"Main",meta:{title:"DrawJS - Free online image editor"},component:function(){return t.e("main").then(t.bind(null,"cd56"))}},{path:"/docs",name:"Documentation",meta:{title:"DrawJS - Documentation"},component:function(){return t.e("documentation").then(t.bind(null,"097c"))}},{path:"/docs/video-tutorials",name:"VideoTutorials",meta:{title:"DrawJS - Video tutorials"},component:function(){return t.e("VideoTutorials").then(t.bind(null,"ee60"))}},{path:"/docs/visual-scripts",name:"VisualScripts",meta:{title:"DrawJS - Visual Scripts"},component:function(){return t.e("VisualScripts").then(t.bind(null,"9491"))}},{path:"/docs/javascript",name:"JavaScript",meta:{title:"DrawJS - JavaScript"},component:function(){return t.e("javascript").then(t.bind(null,"2730"))}},{path:"/docs/javascript/all-scripts",name:"AllScripts",meta:{title:"DrawJS - Documentation - All scripts"},component:function(){return t.e("documentation").then(t.bind(null,"5d89"))}},{path:"/about",name:"About",meta:{title:"DrawJS - About"},component:function(){return t.e("about").then(t.bind(null,"f820"))}}],v=function(){return t.e("javascript_sampleScripts").then(t.bind(null,"2362"))},L=function(e){var a={path:"/docs/javascript/"+e.slug,name:"javascript_"+e.slug,meta:{title:"DrawJS - JavaScript - "+e.name},component:v};C.push(a)},D=Object(V["b"])(null,""),N=0;N<D.length;N++){var B=D[N];null!=B.slug&&L(B)}var I=new p["a"]({mode:"history",routes:C});I.beforeEach((function(e,a,t){document.title=e.meta.title,t()})),I.afterEach((function(e){gtag("config","UA-22463531-6",{page_path:e.fullPath,page_title:e.meta.title,send_page_view:!0})}));var A=I;n["a"].config.productionTip=!1,new n["a"]({router:A,render:function(e){return e(i)}}).$mount("#app")},"5ced":function(e,a,t){},"85ec":function(e,a,t){},"8f63":function(e,a,t){e.exports=t.p+"img/reddit.23c98c58.svg"},"960a":function(e,a,t){"use strict";var n=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",width:"18px",height:"18px",fill:"#000000"}},[t("path",{attrs:{d:"M0 0h24v24H0V0z",fill:"none"}}),t("path",{attrs:{fill:e.color,d:"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}})])},r=[],l={name:"IconDonate",props:{color:{type:String,default:"#000000"}}},o=l,m=t("2877"),u=Object(m["a"])(o,n,r,!1,null,"23df20ea",null);a["a"]=u.exports},aaba:function(e,a,t){e.exports=t.p+"img/youtube-round.fcbe244c.svg"},b0ae:function(e,a,t){e.exports=t.p+"img/drawjs-logo-big.00d03fbd.png"},cccb:function(e,a,t){"use strict";t("5ced")},e004:function(e,a,t){e.exports=t.p+"img/itch-io.9caca30e.svg"},ffc9:function(e,a,t){"use strict";t.d(a,"b",(function(){return c})),t.d(a,"a",(function(){return s}));t("d3b7"),t("6062"),t("3ca3"),t("ddb0"),t("b0c0"),t("caad"),t("2532"),t("a630");var n=t("3666"),r=[],l=new Set,o={},m="",u="";function i(e,a){a.type="SAMPLE_SCRIPT",null==a.slug&&(a.slug=p(a.name)),r.push(a);for(var t=0;t<e.length;t++){var n=e[t];l.add(n),null==o[n]&&(o[n]=[]),o[n].push(a)}}function p(e){var a={lower:!0,strict:!0};return n(e,a)}function c(e,a){var t=a||"";t=t.toLowerCase();var n=null;n=null==e||""==e?r:o[e];for(var l=[],m=0;m<n.length;m++){var u=n[m];u.name.toLowerCase().includes(t)&&l.push(u)}return l}function s(){return Array.from(l)}u="\nlet startX = params.startX ?? 100;\nlet startY = params.startY ?? 100;\nlet endX = params.endX ?? 200;\nlet endY = params.endY ?? 200;\n\nctx.beginPath();\nctx.moveTo(startX, startY);\nctx.lineTo(endX, endY);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw line",func:new Function("params",u),source:u,params:[{name:"startX",type:"number",defaultValue:100},{name:"startY",type:"number",defaultValue:100},{name:"endX",type:"number",defaultValue:200},{name:"endY",type:"number",defaultValue:200}]}),u="\nctx.beginPath();\nctx.moveTo(0, 0);\nctx.lineTo(100, 100);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw line (simple)",func:new Function("params",u),source:u}),u="\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\nlet radius = params.radius ?? 100;\n\nctx.beginPath();\nctx.arc(x, y, radius, 0, 2 * Math.PI);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw circle",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200},{name:"radius",type:"number",defaultValue:100}]}),u="\nctx.beginPath();\nctx.arc(100, 100, 10, 0, 2 * Math.PI);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw circle (simple)",func:new Function("params",u),source:u}),u="\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\nlet radius = params.radius ?? 100;\n\nctx.beginPath();\nctx.arc(x, y, radius, 0, 2 * Math.PI);\nctx.fill();\n",i(["basic drawing"],{name:"Fill circle",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200},{name:"radius",type:"number",defaultValue:100}]}),u="\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\nlet width = params.width ?? 100;\nlet height = params.height ?? 100;\n\nctx.beginPath();\nctx.rect(x, y, width, height);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw rect",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:100},{name:"height",type:"number",defaultValue:100}]}),u="\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\nlet width = params.width ?? 100;\nlet height = params.height ?? 100;\n\nctx.fillRect(x, y, width, height);\n",i(["basic drawing"],{name:"Fill rect",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:100},{name:"height",type:"number",defaultValue:100}]}),u='\nlet text = params.text ?? "Hello World";\nlet font = params.font ?? "30px Arial";\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\n\nctx.font = font;\nctx.fillText(text, x, y);\n',i(["basic drawing","text"],{name:"Draw text",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Hello World"},{name:"font",defaultValue:"30px Arial"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u='\nlet text = params.text ?? "Hello World";\nlet font = params.font ?? "30px Arial";\nlet color = params.color ?? "#000000";\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\n\nctx.font = font;\nctx.fillStyle = color;\nctx.fillText(text, x, y);\n',i(["basic drawing","text"],{name:"Draw text with color",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Hello World"},{name:"font",defaultValue:"30px Arial"},{name:"color",type:"colorHex",defaultValue:"#000000"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u='\nctx.font = "30px Arial";\nctx.fillText("Hello World", 100, 150);\n',i(["basic drawing","text"],{name:"Draw text (simple)",func:new Function("params",u),source:u}),u='\nlet text = params.text ?? "Hello World";\nlet font = params.font ?? "30px Arial";\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\n\nctx.font = font;\nctx.strokeText(text, x, y);\n',i(["basic drawing","text"],{name:"Draw stroke text",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Hello World"},{name:"font",defaultValue:"30px Arial"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u='\n// Create gradient\nvar grd = ctx.createLinearGradient(0, 0, 200, 0);\ngrd.addColorStop(0, "red");\ngrd.addColorStop(1, "white");\n\n// Fill with gradient\nctx.fillStyle = grd;\nctx.fillRect(10, 10, 150, 80);\n',i(["basic drawing"],{name:"Draw Linear Gradient",func:new Function("params",u),source:u}),u='\n// Create gradient\nvar grd = ctx.createRadialGradient(75, 50, 5, 90, 60, 100);\ngrd.addColorStop(0, "red");\ngrd.addColorStop(1, "white");\n\n// Fill with gradient\nctx.fillStyle = grd;\nctx.fillRect(10, 10, 150, 80);\n',i(["basic drawing"],{name:"Draw Circular Gradient",func:new Function("params",u),source:u}),u="\nlet angle = params.angle ?? 10;\nctx.rotate(angle * Math.PI / 180);\n",i(["context"],{name:"Rotate canvas",func:new Function("params",u),source:u,params:[{name:"angle",type:"number",defaultValue:10}]}),u="\nlet angle = params.angle ?? 10;\nlet centerX = params.centerX ?? 300;\nlet centerY = params.centerY ?? 200;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\n\nctx.translate(centerX, centerY);\nctx.rotate(angle * Math.PI / 180);\nctx.translate(-centerX, -centerY);\n\nctx.drawImage(app.getLayerByName(originalLayerName).canvas, 0, 0);\n\n\napp.executeSampleScript('Clone layer image data', {souceLayerName: '_temp_layer_001', targetLayerName: originalLayerName});\n\napp.setCurrentLayer(originalLayerName);\napp.deleteLayerByName('_temp_layer_001');\n",i(["context","layer"],{name:"Rotate layer",func:new Function("params",u),source:u,params:[{name:"angle",type:"number",defaultValue:10},{name:"centerX",type:"number",defaultValue:300},{name:"centerY",type:"number",defaultValue:200}]}),u="\nlet a = params.horizontalScaling ?? 1;\nlet b = params.verticalSkewing ?? 0;\nlet c = params.horizontalSkewing ?? 0;\nlet d = params.verticalScaling ?? 1;\nlet e = params.horizontalTranslation ?? 0;\nlet f = params.verticalTranslation ?? 0;\n\nctx.setTransform(a, b, c, d, e, f);\n",i(["other","context"],{name:"Set transform",func:new Function("params",u),source:u,params:[{name:"horizontalScaling",type:"number",defaultValue:1},{name:"verticalScaling",type:"number",defaultValue:1},{name:"horizontalSkewing",type:"number",defaultValue:0},{name:"verticalSkewing",type:"number",defaultValue:0},{name:"horizontalTranslation",type:"number",defaultValue:0},{name:"verticalTranslation",type:"number",defaultValue:0}]}),u="\nctx.setTransform(1, 0, 0, 1, 0, 0);\n",i(["other","context"],{name:"Reset transform",func:new Function("params",u),source:u}),u='\nlet x1 = params.x1 ?? 0;\nlet y1 = params.y1 ?? 0;\nlet color1 = params.color1 ?? "#FF0000";\nlet x2 = params.x2 ?? 600;\nlet y2 = params.y2 ?? 400;\nlet color2 = params.color2 ?? "#0000FF";\n\n// Create gradient\nvar gradient = ctx.createLinearGradient(x1, y1, x2, y2);\ngradient.addColorStop("0.0", color1);\ngradient.addColorStop("1.0", color2);\n\n// Fill with gradient\nctx.fillStyle = gradient;\n',i(["basic drawing","context"],{name:"Set gradient fillStyle",func:new Function("params",u),source:u,params:[{name:"x1",type:"number",defaultValue:0},{name:"y1",type:"number",defaultValue:0},{name:"color1",type:"colorHex",defaultValue:"#FF0000"},{name:"x2",type:"number",defaultValue:600},{name:"y2",type:"number",defaultValue:400},{name:"color2",type:"colorHex",defaultValue:"#0000FF"}]}),u='\nlet x1 = params.x1 ?? 300;\nlet y1 = params.y1 ?? 200;\nlet r1 = params.r1 ?? 0;\nlet color1 = params.color1 ?? "#FFFF00";\nlet x2 = params.x2 ?? 300;\nlet y2 = params.y2 ?? 200;\nlet r2 = params.r2 ?? 300;\nlet color2 = params.color2 ?? "#FF0000";\n\n// Create gradient\nvar gradient = ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\ngradient.addColorStop(0, color1);\ngradient.addColorStop(1, color2);\n\n// Fill with gradient\nctx.fillStyle = gradient;\n',i(["basic drawing","context"],{name:"Set radial gradient fillStyle",func:new Function("params",u),source:u,params:[{name:"x1",type:"number",defaultValue:300},{name:"y1",type:"number",defaultValue:200},{name:"r1",type:"number",defaultValue:0},{name:"color1",type:"colorHex",defaultValue:"#FFFF00"},{name:"x2",type:"number",defaultValue:300},{name:"y2",type:"number",defaultValue:200},{name:"r2",type:"number",defaultValue:300},{name:"color2",type:"colorHex",defaultValue:"#FF0000"}]}),u='\nlet x1 = params.x1 ?? 0;\nlet y1 = params.y1 ?? 0;\nlet color1 = params.color1 ?? "#FF0000";\nlet x2 = params.x2 ?? 600;\nlet y2 = params.y2 ?? 400;\nlet color2 = params.color2 ?? "#0000FF";\n\n// Create gradient\nvar gradient = ctx.createLinearGradient(x1, y1, x2, y2);\ngradient.addColorStop("0.0", color1);\ngradient.addColorStop("1.0", color2);\n\n// Fill with gradient\nctx.strokeStyle = gradient;\n',i(["basic drawing","context"],{name:"Set gradient strokeStyle",func:new Function("params",u),source:u,params:[{name:"x1",type:"number",defaultValue:0},{name:"y1",type:"number",defaultValue:0},{name:"color1",type:"colorHex",defaultValue:"#FF0000"},{name:"x2",type:"number",defaultValue:600},{name:"y2",type:"number",defaultValue:400},{name:"color2",type:"colorHex",defaultValue:"#0000FF"}]}),u='\nlet x1 = params.x1 ?? 300;\nlet y1 = params.y1 ?? 200;\nlet r1 = params.r1 ?? 0;\nlet color1 = params.color1 ?? "#FFFF00";\nlet x2 = params.x2 ?? 300;\nlet y2 = params.y2 ?? 200;\nlet r2 = params.r2 ?? 300;\nlet color2 = params.color2 ?? "#FF0000";\n\n// Create gradient\nvar gradient = ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\ngradient.addColorStop(0, color1);\ngradient.addColorStop(1, color2);\n\n// Fill with gradient\nctx.strokeStyle = gradient;\n',i(["basic drawing","context"],{name:"Set radial gradient strokeStyle",func:new Function("params",u),source:u,params:[{name:"x1",type:"number",defaultValue:300},{name:"y1",type:"number",defaultValue:200},{name:"r1",type:"number",defaultValue:0},{name:"color1",type:"colorHex",defaultValue:"#FFFF00"},{name:"x2",type:"number",defaultValue:300},{name:"y2",type:"number",defaultValue:200},{name:"r2",type:"number",defaultValue:300},{name:"color2",type:"colorHex",defaultValue:"#FF0000"}]}),u="\nctx.clearRect(0, 0, 600, 400); \n",i(["basic drawing"],{name:"Clear rect",func:new Function("params",u),source:u}),u="\nctx.globalAlpha = params.alpha ?? 0.5;\n",i(["alpha"],{name:"Set global alpha",func:new Function("params",u),source:u,params:[{name:"alpha",type:"number",defaultValue:.5}]}),u='\nctx.shadowBlur = params.shadowBlur ?? 20;\nctx.shadowColor = params.shadowColor ?? "#000000";\nctx.shadowOffsetX = params.shadowOffsetX ?? 0;\nctx.shadowOffsetY = params.shadowOffsetY ?? 0;\n',i(["filters"],{name:"Set shadow",func:new Function("params",u),source:u,params:[{name:"shadowBlur",type:"number",defaultValue:20},{name:"shadowColor",type:"colorHex",defaultValue:"#000000"},{name:"shadowOffsetX",type:"number",defaultValue:0},{name:"shadowOffsetY",type:"number",defaultValue:0}]}),u="\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\n\nctx.shadowBlur = params.shadowBlur ?? 10;\nctx.shadowColor = params.shadowColor ?? \"#000000\";\nctx.shadowOffsetX = params.shadowOffsetX ?? 10;\nctx.shadowOffsetY = params.shadowOffsetY ?? 10;\n\nctx.drawImage(app.getLayerByName(originalLayerName).canvas, 0, 0);\n\napp.executeSampleScript('Clone layer image data', {souceLayerName: '_temp_layer_001', targetLayerName: originalLayerName});\n\napp.setCurrentLayer(originalLayerName);\napp.deleteLayerByName('_temp_layer_001');\n",i(["filters"],{name:"Add shadow",func:new Function("params",u),source:u,params:[{name:"shadowBlur",type:"number",defaultValue:10},{name:"shadowColor",type:"colorHex",defaultValue:"#000000"},{name:"shadowOffsetX",type:"number",defaultValue:10},{name:"shadowOffsetY",type:"number",defaultValue:10}]}),u="\nctx.clip();\n",i(["context"],{name:"Clip",func:new Function("params",u),source:u}),u='\n// Clip a rectangular area\nctx.rect(50, 20, 200, 120);\nctx.stroke();\nctx.clip();\n// Draw red rectangle after clip()\nctx.fillStyle = "red";\nctx.fillRect(0, 0, 150, 100);\n',i(["context"],{name:"Clip rect",func:new Function("params",u),source:u}),u='\nctx.fillStyle = params.color ?? "#FF0000";\n',i(["context","color"],{name:"Set fill style",func:new Function("params",u),source:u,params:[{name:"color",type:"colorHex",defaultValue:"#FF0000"}]}),u="\nctx.fillStyle = 'rgb(255,0,0)';\n",i(["context","color"],{name:"Set fill style RGB",func:new Function("params",u),source:u}),u="\nctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n",i(["context","color"],{name:"Set fill style RGBA",func:new Function("params",u),source:u}),u='\nctx.strokeStyle = params.color ?? "#FF0000";\n',i(["context"],{name:"Set stroke style",func:new Function("params",u),source:u,params:[{name:"color",type:"colorHex",defaultValue:"#FF0000"}]}),u="\nctx.lineWidth = params.lineWidth ?? 5;\n",i(["basic drawing"],{name:"Set line width",func:new Function("params",u),source:u,params:[{name:"lineWidth",type:"number",defaultValue:5}]}),u="\nparams.x = params.x || 300;\nparams.y = params.y || 200;\nparams.r = params.radius || 20;\nparams.n = params.numPoints || 5;\nparams.inset = params.inset || 2.5;\n\nctx.save();\nctx.beginPath();\nctx.translate(params.x, params.y);\nctx.moveTo(0,0-params.r);\nfor (var i = 0; i < params.n; i++) {\n\tctx.rotate(Math.PI / params.n);\n\tctx.lineTo(0, 0 - (params.r*params.inset));\n\tctx.rotate(Math.PI / params.n);\n\tctx.lineTo(0, 0 - params.r);\n}\nctx.closePath();\nctx.fill();\nctx.restore();\n",i(["shapes"],{name:"Draw star",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"radius",type:"number",defaultValue:20},{name:"numPoints",type:"number",defaultValue:5},{name:"inset",type:"number",defaultValue:2.5}]}),u='\nlet cx = params.x ?? 300;\nlet cy = params.y ?? 200;\nlet numPoints = params.numPoints ?? 5;\nlet innerRadius = params.innerRadius ?? 40;\nlet outerRadius = params.outerRadius ?? 100;\nlet lineWidth = params.lineWidth ?? 5;\nlet color = params.color ?? "#FFFF00";\nlet strokeColor = params.strokeColor ?? "#999900";\nlet angle = (params.angle ?? 0) + 180;\n\nlet rot=Math.PI/2*3 + (angle * Math.PI / 180);\nlet x=cx;\nlet y=cy;\nlet step=Math.PI/numPoints;\n\nctx.beginPath();\nctx.moveTo(cx+Math.cos(rot)*innerRadius, cy+Math.sin(rot)*innerRadius)\nfor(i=0;i<numPoints;i++){\n  x=cx+Math.cos(rot)*innerRadius;\n  y=cy+Math.sin(rot)*innerRadius;\n  ctx.lineTo(x,y)\n  rot+=step\n\n  x=cx+Math.cos(rot)*outerRadius;\n  y=cy+Math.sin(rot)*outerRadius;\n  ctx.lineTo(x,y)\n  rot+=step\n}\nctx.lineTo(cx+Math.cos(rot)*innerRadius, cy+Math.sin(rot)*innerRadius);\nctx.closePath();\n\nctx.fillStyle=color;\nctx.fill();\n\nif (lineWidth > 0) {\n  ctx.lineWidth=lineWidth;\n  ctx.strokeStyle=strokeColor;\n  ctx.stroke();\n}\n',i(["shapes"],{name:"Draw star 2",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"numPoints",type:"number",defaultValue:5},{name:"innerRadius",type:"number",defaultValue:40},{name:"outerRadius",type:"number",defaultValue:100},{name:"lineWidth",type:"number",defaultValue:5},{name:"color",type:"colorHex",defaultValue:"#FFFF00"},{name:"strokeColor",type:"colorHex",defaultValue:"#999900"},{name:"angle",type:"number",defaultValue:0}]}),u='\nlet cx = params.x ?? 300;\nlet cy = params.y ?? 200;\nlet numPoints = params.numPoints ?? 5;\nlet innerRadius = params.innerRadius ?? 40;\nlet outerRadius = params.outerRadius ?? 100;\nlet lineWidth = params.lineWidth ?? 5;\nlet color = params.color ?? "#FFFF00";\nlet strokeColor = params.strokeColor ?? "#999900";\nlet angle = (params.angle ?? 0) + 180;\n\nlet rot=Math.PI/2*3 + (angle * Math.PI / 180);\nlet x=cx;\nlet y=cy;\nlet step=Math.PI/numPoints;\n\nctx.beginPath();\nctx.moveTo(cx+Math.cos(rot)*innerRadius, cy+Math.sin(rot)*innerRadius)\nfor(i=0;i<numPoints;i++){\n  x=cx+Math.cos(rot)*innerRadius;\n  y=cy+Math.sin(rot)*innerRadius;\n  ctx.lineTo(x,y)\n  rot+=step\n\n  x=cx+Math.cos(rot)*outerRadius;\n  y=cy+Math.sin(rot)*outerRadius;\n  ctx.lineTo(x,y)\n  rot+=step\n}\nctx.lineTo(cx+Math.cos(rot)*innerRadius, cy+Math.sin(rot)*innerRadius);\nctx.closePath();\nctx.fill();\n\nif (lineWidth > 0) {\n  ctx.lineWidth=lineWidth;\n  ctx.stroke();\n}\n',i(["shapes"],{name:"Draw star 3",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"numPoints",type:"number",defaultValue:5},{name:"innerRadius",type:"number",defaultValue:40},{name:"outerRadius",type:"number",defaultValue:100},{name:"lineWidth",type:"number",defaultValue:5},{name:"angle",type:"number",defaultValue:0}]}),u="\nlet x = params.x ?? 300;\nlet y = params.y ?? 200;\nlet radius = params.radius ?? 48;\nlet numPoints = params.numPoints ?? 24;\nlet inset = params.inset ?? 1.3;\n\napp.executeSampleScript('Draw star',{x, y, radius, numPoints, inset});\n",i(["shapes"],{name:"Draw spike ball",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"radius",type:"number",defaultValue:48},{name:"numPoints",type:"number",defaultValue:24},{name:"inset",type:"number",defaultValue:1.3}]}),u="\nctx.restore();\n",u="\nctx.save();\n",i(["context"],{name:"Save context",func:new Function("params",u),source:u}),u="\nctx.restore();\n",i(["context"],{name:"Restore context",func:new Function("params",u),source:u}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nconst imageData = ctx.createImageData(width, height);\n\n// Iterate through every pixel\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  // Modify pixel data\n  imageData.data[i + 0] = $util.random256(); // R value\n  imageData.data[i + 1] = $util.random256(); // G value\n  imageData.data[i + 2] = $util.random256(); // B value\n  imageData.data[i + 3] = 255; // A value\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["other"],{name:"Draw random pixels",func:new Function("params",u),source:u}),u="\nlet minValue = params.minValue ?? 40;\nlet maxValue = params.maxValue ?? 52;\n\nlet diff = maxValue - minValue;\nlet multiplier = diff / 256;\n\napp.executeSampleScript('Draw random pixels');\napp.executeSampleScript('Grayscale layer');\napp.executeSampleScript('Modulate image color', {r: multiplier, g: multiplier, b: multiplier});\napp.executeSampleScript('Lighter', {amount: minValue});\n",i(["backgrounds"],{name:"Gray noise",func:new Function("params",u),source:u,params:[{name:"minValue",type:"number",defaultValue:40},{name:"maxValue",type:"number",defaultValue:52}]}),u="\nlet amount = params.amount ?? 50;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nconst imageData = ctx.getImageData(0, 0, width, height);\n\n// Iterate through every pixel\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  // Modify pixel data\n  imageData.data[i + 0] += amount; // R value\n  imageData.data[i + 1] += amount; // G value\n  imageData.data[i + 2] += amount; // B value\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["filters","color"],{name:"Lighter",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:50}]}),u="\nlet amount = params.amount || 50;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nconst imageData = ctx.getImageData(0, 0, width, height);\n\n// Iterate through every pixel\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  // Modify pixel data\n  imageData.data[i + 0] -= amount; // R value\n  imageData.data[i + 1] -= amount; // G value\n  imageData.data[i + 2] -= amount; // B value\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["filters","color"],{name:"Darker",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:50}]}),u="\nlet amount = params.amount ?? 5;\nlet context = params.context ?? ctx;\n\nlet width = context.canvas.width;\nlet height = context.canvas.height;\n\nconst imageData = context.getImageData(0, 0, width, height);\n\nlet x = 0;\nlet y = 0;\n\ncontext.save();\n\n// Iterate through every pixel\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  if (imageData.data[i + 3] > 0) {\n    context.fillStyle = 'rgba(' + imageData.data[i] + ', ' + imageData.data[i + 1] + ', ' + imageData.data[i + 2] + ', ' + imageData.data[i + 3]/255 + ')';\n    context.beginPath();\n    context.arc(x + 0.5, y + 0.5, amount, 0, 2 * Math.PI);\n    context.fill();\n  }\n  x++;\n  if (x>width-1) {\n    x = 0;\n    y++;\n  }\n}\n\ncontext.restore();\n",i(["other","border"],{name:"Grow",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:5}]}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n    imageData.data[i + 3] = 255 - imageData.data[i + 3];\n}\n\nctx.putImageData(imageData, 0, 0)\n",i(["alpha"],{name:"Invert image alpha",func:new Function("params",u),source:u}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n    imageData.data[i] = 255 - imageData.data[i];\n    imageData.data[i+1] = 255 - imageData.data[i+1];\n    imageData.data[i+2] = 255 - imageData.data[i+2];\n}\n\nctx.putImageData(imageData, 0, 0)\n",i(["color"],{name:"Invert image colors",func:new Function("params",u),source:u}),u='\nlet sourceColor = params.sourceColor ?? "#FFFFFF";\nlet targetColor = params.targetColor ?? "#FF0000";\nlet tolerance = params.tolerance ?? 0;\n\nlet sourceColorRGB = $util.hexToRgb(sourceColor);\nlet targetColorRGB = $util.hexToRgb(targetColor);\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n    let r = imageData.data[i];\n    let g = imageData.data[i+1];\n    let b = imageData.data[i+2];\n\n    let rDiff = Math.abs(r - sourceColorRGB.r);\n    let gDiff = Math.abs(g - sourceColorRGB.g);\n    let bDiff = Math.abs(b - sourceColorRGB.b);\n\n    if (rDiff <= tolerance && gDiff <= tolerance && bDiff <= tolerance) {\n      imageData.data[i] = targetColorRGB.r;\n      imageData.data[i+1] = targetColorRGB.g;\n      imageData.data[i+2] = targetColorRGB.b;\n    }\n}\n\nctx.putImageData(imageData, 0, 0);\n',i(["color"],{name:"Replace color",func:new Function("params",u),source:u,params:[{name:"sourceColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"targetColor",type:"colorHex",defaultValue:"#FF0000"},{name:"tolerance",type:"number",defaultValue:0}]}),u="\nlet p = new Path2D('M160 110H40v20h120v30L200 120l-40-40z');\nctx.fill(p);\n",i(["SVG"],{name:"Draw Path2D",func:new Function("params",u),source:u}),m='\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="300px" height="300px">\n<path d="M0 0h24v24H0z" fill="none"/>\n<path d="M16.01 11H4v2h12.01v3L20 12l-3.99-4z"/>\n</svg>\n',u="\nlet x = params.x ?? 0;\nlet y = params.y ?? 0;\nlet xml = params.xml;\n\nlet defaultXml = `".concat(m,"`;\n\nxml = xml ?? defaultXml;\n\nvar svg64 = btoa(xml);\n\nvar b64Start = 'data:image/svg+xml;base64,';\n\nvar image64 = b64Start + svg64;\n\nvar img = new Image();\nimg.src = image64;\n\nctx.drawImage(img, x, y);\n"),i(["SVG"],{name:"Draw SVG",func:new Function("params",u),source:u}),m='\n<svg viewBox="0 0 500 400" xmlns="http://www.w3.org/2000/svg" width="500px" height="400px">\n  <circle cx="300" cy="200" r="50" fill="#ff0000"/>\n</svg>\n',u="\nvar xml = `".concat(m,"`;\n\napp.executeSampleScript('Draw SVG', {xml:xml, x:0, y:0});\n"),i(["SVG"],{name:"Draw SVG - circle",func:new Function("params",u),source:u}),m='\n<svg width="600" height="500" viewBox="0 0 600 500" xmlns="http://www.w3.org/2000/svg"\n    xmlns:xlink="http://www.w3.org/1999/xlink">\n  <defs>\n    <filter id="emboss">\n      <feConvolveMatrix\n          kernelMatrix="1 0 0\n                        0 0 0\n                        0 0 -1"/>\n    </filter>\n  </defs>\n  <circle cx="300" cy="200" r="50" fill="#ff0000" style="filter:url(#emboss);"/>\n</svg>\n',u="\nvar xml = `".concat(m,"`;\n\napp.executeSampleScript('Draw SVG', {xml:xml, x:0, y:0});\n"),i(["SVG"],{name:"Draw SVG - feConvolveMatrix",func:new Function("params",u),source:u}),m='\n<svg width="600" height="500" viewBox="0 0 600 500" xmlns="http://www.w3.org/2000/svg"\n    xmlns:xlink="http://www.w3.org/1999/xlink">\n  <defs>\n    <filter id="emboss">\n      <feConvolveMatrix order="5" bias="0.5" preserveAlpha="true"\n          kernelMatrix="1 0 0 0 0\n                        0 1 0 0 0\n                        0 0 0 0 0\n                        0 0 0 -1 0\n                        0 0 0 0 -1"/>\n    </filter>\n  </defs>\n  <circle cx="300" cy="200" r="50" fill="#ff0000" style="filter:url(#emboss);"/>\n</svg>\n',u="\nvar xml = `".concat(m,"`;\n\napp.executeSampleScript('Draw SVG', {xml:xml, x:0, y:0});\n"),i(["SVG"],{name:"Draw SVG - feConvolveMatrix 2",func:new Function("params",u),source:u}),m='\n<svg viewBox="0 0 600 400" xmlns="http://www.w3.org/2000/svg" width="600px" height="400px">\n  <filter id="emboss1" x="0" y="0" width="100%" height="100%">\n    <feTurbulence baseFrequency="0.025" seed="0" />\n  </filter>\n  <rect x="0" y="0" width="600" height="400" style="filter:url(#emboss1);" />\n</svg>\n',u="\nvar xml = `".concat(m,"`;\n\napp.executeSampleScript('Draw SVG', {xml:xml, x:0, y:0});\n"),i(["SVG"],{name:"Draw SVG - turbulence",func:new Function("params",u),source:u}),m='\n<svg height="200" width="200" viewBox="0 0 220 220"\n    xmlns="http://www.w3.org/2000/svg">\n  <filter id = "filter">\n    <feSpecularLighting result="specOut"\n        specularExponent="20" lighting-color="#bbbbbb">\n      <fePointLight x="50" y="50" z="200"/>\n    </feSpecularLighting>\n    <feComposite in="SourceGraphic" in2="specOut"\n        operator="arithmetic" k1="0" k2="1" k3="1" k4="0"/>\n  </filter>\n  <circle cx="110" cy="110" r="100" style="filter:url(#filter)"/>\n</svg>\n',u="\nvar xml = `".concat(m,"`;\n\napp.executeSampleScript('Draw SVG', {xml:xml, x:0, y:0});\n"),i(["SVG"],{name:"Draw SVG - SpecularLighting",func:new Function("params",u),source:u}),u="\nlet amount = params.amount ?? 3;\nctx.filter = 'blur(' + amount + 'px)';\n",i(["filters"],{name:"Blur",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:3}]}),u="\nlet amount = params.amount ?? 3;\nlet filterString = 'blur(' + amount + 'px)';\napp.executeSampleScript('Repaint with filter',{filter: filterString});\n",i(["filters"],{name:"Blur layer",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:3}]}),u="\nctx.filter = 'grayscale(100%)';\n",i(["filters","context","color"],{name:"Grayscale",func:new Function("params",u),source:u}),u="\napp.executeSampleScript('Repaint with filter', {filter: 'grayscale(100%)'});\n",i(["filters","layer","color"],{name:"Grayscale layer",func:new Function("params",u),source:u}),u="\nlet filter = params.filter ?? 'grayscale(100%)';\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\n\nctx.filter = filter;\n\nctx.drawImage(app.getLayerByName(originalLayerName).canvas, 0, 0);\n\napp.executeSampleScript('Clone layer image data', {souceLayerName: '_temp_layer_001', targetLayerName: originalLayerName});\n\napp.setCurrentLayer(originalLayerName);\napp.deleteLayerByName('_temp_layer_001');\n",i(["filters"],{name:"Repaint with filter",func:new Function("params",u),source:u}),u="\nctx.filter = 'grayscale(50%)';\n",i(["filters","context","color"],{name:"Grayscale 50%",func:new Function("params",u),source:u}),u="\nctx.filter = 'brightness(1.2)';\n",i(["filters","context","color"],{name:"Brightness",func:new Function("params",u),source:u}),u="\nctx.filter = 'contrast(150%)';\n",i(["filters","context","color"],{name:"Contrast",func:new Function("params",u),source:u}),u="\nctx.filter = 'invert(100%)';\n",i(["filters","context","color"],{name:"Invert",func:new Function("params",u),source:u}),u="\nctx.filter = 'hue-rotate(120deg)';\n",i(["context","filters","color"],{name:"Hue rotate",func:new Function("params",u),source:u}),u="\nctx.filter = 'drop-shadow(-9px 9px 3px #666666)';\n",i(["filters","context"],{name:"Drop shadow",func:new Function("params",u),source:u}),u="\nctx.filter = 'sepia(100%)';\n",i(["filters","context","color"],{name:"Sepia",func:new Function("params",u),source:u}),u="\nctx.filter = 'opacity(50%)';\n",i(["filters","context"],{name:"Opacity",func:new Function("params",u),source:u}),u="\nctx.filter = 'saturate(30%)';\n",i(["filters","context","color"],{name:"Saturate",func:new Function("params",u),source:u}),u="\nctx.filter = 'none';\n",i(["filters"],{name:"Clear filters",func:new Function("params",u),source:u}),u='\nlet sourceLayerName = params.sourceLayerName ?? "layer01";\nlet sourceLayer = app.getLayerByName(sourceLayerName);\nctx.drawImage(sourceLayer.canvas, 0, 0);\n',i(["other","layer","app"],{name:"Paint layer to another",func:new Function("params",u),source:u,params:[{name:"sourceLayerName",type:"string",defaultValue:"layer01"}]}),u="\nlet red = params.r ?? 255;\nlet green = params.g ?? 0;\nlet blue = params.b ?? 0;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n    imageData.data[i] = red;\n    imageData.data[i+1] = green;\n    imageData.data[i+2] = blue;\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["color"],{name:"Set image color",func:new Function("params",u),source:u,params:[{name:"r",type:"number",defaultValue:255},{name:"g",type:"number",defaultValue:0},{name:"b",type:"number",defaultValue:0}]}),u='\nlet color = params.color ?? "#FF0000";\nlet context = params.context ?? ctx;\n\nlet colorRGB = $util.hexToRgb(color);\n\nlet width = context.canvas.width;\nlet height = context.canvas.height;\n\nlet imageData = context.getImageData(0, 0, width, height);\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n    imageData.data[i] = colorRGB.r;\n    imageData.data[i+1] = colorRGB.g;\n    imageData.data[i+2] = colorRGB.b;\n}\n\ncontext.putImageData(imageData, 0, 0);\n',i(["color"],{name:"Set image color hex",func:new Function("params",u),source:u,params:[{name:"color",type:"colorHex",defaultValue:"#FF0000"}]}),u="\nlet red = params.r ?? 1;\nlet green = params.g ?? 0.5;\nlet blue = params.b ?? 0.5;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n    imageData.data[i] = imageData.data[i] * red;\n    imageData.data[i+1] = imageData.data[i+1] * green;\n    imageData.data[i+2] = imageData.data[i+2] * blue;\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["color","filters"],{name:"Modulate image color",func:new Function("params",u),source:u,params:[{name:"r",type:"number",defaultValue:1},{name:"g",type:"number",defaultValue:.5},{name:"b",type:"number",defaultValue:.5}]}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet tempCanvas = document.createElement('canvas');\ntempCanvas.width = width;\ntempCanvas.height = height;\n\nlet tempCtx = tempCanvas.getContext('2d');\ntempCtx.drawImage(ctx.canvas, 0, 0);\n\nctx.clearRect(0, 0, width, height);\nctx.drawImage(tempCtx.canvas, 0, 0);\n",i(["other"],{name:"Repaint",func:new Function("params",u),source:u}),u="\nlet amount = params.amount ?? 3;\nlet lightOffset = params.lightOffset ?? 100;\n\nlet originalLayerName = app.getCurrentLayer().name;\nlet originalCanvas = ctx.canvas;\nlet newLayerName = originalLayerName + '_2';\n\napp.duplicateLayer(originalLayerName, newLayerName);\napp.setCurrentLayer(newLayerName);\n\napp.executeSampleScript('Grow',{amount: amount});\napp.executeSampleScript('Lighter', {amount: lightOffset});\nctx.drawImage(originalCanvas, 0, 0);\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName(newLayerName).canvas, 0, 0);\n\napp.deleteLayerByName(newLayerName);\n",i(["border"],{name:"Add border",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:3},{name:"lightOffset",type:"number",defaultValue:100}]}),u="\nlet amount = params.amount || 4;\nlet lightOffset = params.lightOffset || 100;\n\napp.executeSampleScript('Add border', {amount: amount, lightOffset: lightOffset});\napp.executeSampleScript('Add border', {amount: amount, lightOffset: -lightOffset});\n",i(["border"],{name:"Add double border",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:4},{name:"lightOffset",type:"number",defaultValue:100}]}),u="\nlet amount = params.amount ?? 3;\nlet red = params.r ?? 255;\nlet green = params.g ?? 0;\nlet blue = params.b ?? 0;\n\nlet originalLayerName = app.getCurrentLayer().name;\nlet originalCanvas = ctx.canvas;\nlet newLayerName = originalLayerName + '_2';\n\napp.duplicateLayer(originalLayerName, newLayerName);\napp.setCurrentLayer(newLayerName);\n\napp.executeSampleScript('Set image color', {r: red, g: green, b: blue});\napp.executeSampleScript('Grow',{amount: amount});\nctx.drawImage(originalCanvas, 0, 0);\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName(newLayerName).canvas, 0, 0);\n\napp.deleteLayerByName(newLayerName);\n",i(["border","color"],{name:"Add color border",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:3},{name:"r",type:"number",defaultValue:255},{name:"g",type:"number",defaultValue:0},{name:"b",type:"number",defaultValue:0}]}),u="\nlet amount = params.amount ?? 3;\nlet color = params.color ?? \"#000000\";\nlet context = params.context ?? ctx;\n\nlet originalCanvas = context.canvas;\n\nlet width = context.canvas.width;\nlet height = context.canvas.height;\n\nlet tempCanvas = document.createElement('canvas');\ntempCanvas.width = width;\ntempCanvas.height = height;\n\nlet tempCtx = tempCanvas.getContext('2d');\n\ntempCtx.drawImage(originalCanvas, 0, 0);\napp.executeSampleScript('Set image color hex', {color: color, context: tempCtx});\napp.executeSampleScript('Grow',{amount: amount, context: tempCtx});\ntempCtx.drawImage(originalCanvas, 0, 0);\n\nlet imageData = tempCtx.getImageData(0, 0, width, height);\ncontext.putImageData(imageData, 0, 0);\n",i(["border","color"],{name:"Add color border hex",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:3},{name:"color",type:"colorHex",defaultValue:"#000000"}]}),u='\nlet text = "Hello world!"\nlet width = ctx.measureText(text).width;\n',i(["text"],{name:"Measure text",func:new Function("params",u),source:u}),u="\nlet x1 = params.x1 ?? 100;\nlet y1 = params.y1 ?? 100;\nlet x2 = params.x2 ?? 300;\nlet y2 = params.y2 ?? 100;\nlet lineSegmentDistance = params.lineSegmentDistance ?? 4;\nlet lineGapDistance = params.lineGapDistance ?? 3;\nlet lineDashOffset = params.lineDashOffset ?? 0;\n\nctx.setLineDash([lineSegmentDistance, lineGapDistance]);\nctx.beginPath();\nctx.lineDashOffset = lineDashOffset;\nctx.moveTo(x1, y1);\nctx.lineTo(x2, y2);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw dashed line",func:new Function("params",u),source:u,params:[{name:"x1",type:"number",defaultValue:100},{name:"y1",type:"number",defaultValue:100},{name:"x2",type:"number",defaultValue:300},{name:"y2",type:"number",defaultValue:100},{name:"lineSegmentDistance",type:"number",defaultValue:4},{name:"lineGapDistance",type:"number",defaultValue:3},{name:"lineDashOffset",type:"number",defaultValue:0}]}),u="\nlet lineSegmentDistance = params.lineSegmentDistance ?? 4;\nlet lineGapDistance = params.lineGapDistance ?? 3;\nlet lineDashOffset = params.lineDashOffset ?? 0;\n\nctx.setLineDash([lineSegmentDistance, lineGapDistance]);\nctx.lineDashOffset = lineDashOffset;\n",i(["context"],{name:"Set line dash",func:new Function("params",u),source:u,params:[{name:"lineSegmentDistance",type:"number",defaultValue:4},{name:"lineGapDistance",type:"number",defaultValue:3},{name:"lineDashOffset",type:"number",defaultValue:0}]}),u='\nlet layerName = params.layerName ?? "Layer01";\napp.addLayerWithName(layerName);\n',i(["app","layer"],{name:"Add layer",func:new Function("params",u),source:u,params:[{name:"layerName",type:"string",defaultValue:"Layer01"}]}),u='\nlet sourceLayerName = params.sourceLayerName ?? "layer01";\nlet newLayerName = params.newLayerName ?? "layer02";\napp.duplicateLayer(sourceLayerName, newLayerName);\n',i(["app","layer"],{name:"Duplicate layer",func:new Function("params",u),source:u,params:[{name:"sourceLayerName",type:"string",defaultValue:"layer01"},{name:"newLayerName",type:"string",defaultValue:"layer02"}]}),u='\nlet layerName = params.layerName ?? "Layer01";\napp.setCurrentLayer(layerName);\n',i(["app","layer"],{name:"Set current layer",func:new Function("params",u),source:u,params:[{name:"layerName",type:"string",defaultValue:"Layer01"}]}),u="\napp.executeSampleScript('Grow',{amount: 10});\n",i(["app"],{name:"Execute sample script",func:new Function("params",u),source:u}),u="\napp.executeSavedScript('MyScriptName',{myParam: 10});\n",i(["app"],{name:"Execute saved script",func:new Function("params",u),source:u}),u="\napp.globalVariables.speedX = 100;\n",i(["app"],{name:"Set global variable",func:new Function("params",u),source:u}),u="\nvar speedX = app.globalVariables.speedX;\nalert(speedX);\n",i(["app"],{name:"Get global variable",func:new Function("params",u),source:u}),u="\napp.resetContext();\n",i(["app","context"],{name:"Reset context",func:new Function("params",u),source:u}),u='\nlet baseLayerName = params.baseLayerName ?? "layer01";\nlet maskLayerName = params.maskLayerName ?? "layer02";\napp.combineLayers(baseLayerName,maskLayerName);\n',i(["app","mask","layer"],{name:"Apply mask to layer",func:new Function("params",u),source:u,params:[{name:"baseLayerName",type:"string",defaultValue:"layer01"},{name:"maskLayerName",type:"string",defaultValue:"layer02"}]}),u='\n// Options: "top", "hanging", "middle", "alphabetic" (default), "ideographic", "bottom"\nctx.textBaseline = "bottom";\n',i(["text"],{name:"Set text baseline",func:new Function("params",u),source:u}),u="\nlet x = params.x ?? 300;\nlet y = params.y ?? 200;\nlet radiusX = params.radiusX ?? 100;\nlet radiusY = params.radiusY ?? 50;\nlet rotation = params.rotation ?? 0;\nlet startAngle = params.startAngle ?? 0;\nlet endAngle = params.endAngle ?? 360;\nlet anticlockwise = false;\n\nctx.beginPath()\nctx.ellipse(x, y, radiusX, radiusY, rotation * Math.PI / 180, startAngle * Math.PI / 180, endAngle * Math.PI / 180, anticlockwise);\nctx.stroke();\n",i(["basic drawing"],{name:"Draw ellipse",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"radiusX",type:"number",defaultValue:100},{name:"radiusY",type:"number",defaultValue:50},{name:"rotation",type:"number",defaultValue:0},{name:"startAngle",type:"number",defaultValue:0},{name:"endAngle",type:"number",defaultValue:360}]}),u="\nlet x = params.x ?? 300;\nlet y = params.y ?? 200;\nlet radiusX = params.radiusX ?? 100;\nlet radiusY = params.radiusY ?? 50;\nlet rotation = params.rotation ?? 0;\nlet startAngle = params.startAngle ?? 0;\nlet endAngle = params.endAngle ?? 360;\nlet anticlockwise = false;\n\nctx.beginPath();\nctx.ellipse(x, y, radiusX, radiusY, rotation * Math.PI / 180, startAngle * Math.PI / 180, endAngle * Math.PI / 180, anticlockwise);\nctx.fill();\n",i(["basic drawing"],{name:"Fill ellipse",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"radiusX",type:"number",defaultValue:100},{name:"radiusY",type:"number",defaultValue:50},{name:"rotation",type:"number",defaultValue:0},{name:"startAngle",type:"number",defaultValue:0},{name:"endAngle",type:"number",defaultValue:360}]}),u="\nctx.scale(4, 4);\n",i(["context"],{name:"Set scale",func:new Function("params",u),source:u}),u="\nlet start = { x: 100, y: 100 };\nlet cp1 = { x: 100, y: 200 };\nlet cp2 = { x: 200, y: 100 };\nlet end = { x: 200, y: 200 };\n\nctx.beginPath();\nctx.moveTo(start.x, start.y);\nctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, end.x, end.y);\nctx.stroke();\n",i(["basic drawing"],{name:"Bezier curve",func:new Function("params",u),source:u}),u="\nlet sourceX = 100;\nlet sourceY = 100;\nlet cpx = 200;\nlet cpy = 100;\nlet targetX = 200;\nlet targetY = 200;\n\nctx.beginPath();\nctx.moveTo(sourceX, sourceY);\nctx.quadraticCurveTo(cpx, cpy, targetX, targetY);\nctx.stroke();\n",i(["basic drawing"],{name:"Quadratic bezier curve",func:new Function("params",u),source:u}),u="\nlet sourceX = 100;\nlet sourceY = 100;\nlet x1 = 200;\nlet y1 = 200;\nlet x2 = 100;\nlet y2 = 200;\nlet radius = 20;\n\nctx.beginPath();\nctx.moveTo(sourceX, sourceY);\nctx.arcTo(x1, y1, x2, y2, radius);\nctx.lineTo(x2, y2);\nctx.stroke();\n",i(["basic drawing"],{name:"Arc to",func:new Function("params",u),source:u}),u="\nvar img = new Image();\nimg.src = 'https://mdn.mozillademos.org/files/222/Canvas_createpattern.png';\nimg.onload = function() {\n  var pattern = ctx.createPattern(img, 'repeat');\n  ctx.fillStyle = pattern;\n  ctx.fillRect(0, 0, 300, 300);\n};\n",i(["basic drawing","image"],{name:"Create pattern",func:new Function("params",u),source:u}),u="\nconst patternCanvas = document.createElement('canvas');\nconst patternContext = patternCanvas.getContext('2d');\n\npatternCanvas.width = 50;\npatternCanvas.height = 50;\n\npatternContext.fillStyle = '#fec';\npatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\npatternContext.arc(0, 0, 50, 0, .5 * Math.PI);\npatternContext.stroke();\n\nconst pattern = ctx.createPattern(patternCanvas, 'repeat');\nctx.fillStyle = pattern;\nctx.fillRect(0, 0, canvas.width, canvas.height);\n",i(["basic drawing"],{name:"Create pattern from canvas",func:new Function("params",u),source:u}),u='\nlet text = params.text ?? "Text";\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\n\nctx.shadowBlur = params.shadowBlur ?? 5;\nctx.shadowColor = params.shadowColor ?? "#000000";\nctx.shadowOffsetX = params.shadowOffsetX ?? 5;\nctx.shadowOffsetY = params.shadowOffsetY ?? 5;\nctx.fillStyle = params.fillStyle ?? "#FF0000";\nctx.font = params.font ?? "64px Arial";\n\nctx.fillText(text, x, y);\n',i(["filters","text"],{name:"Draw shadow text",func:new Function("params",u),source:u,params:[{name:"text",type:"string",defaultValue:"Text"},{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200},{name:"font",type:"string",defaultValue:"64px Arial"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"shadowBlur",type:"number",defaultValue:5},{name:"shadowColor",type:"colorHex",defaultValue:"#000000"},{name:"shadowOffsetX",type:"number",defaultValue:5},{name:"shadowOffsetY",type:"number",defaultValue:5}]}),u='\nlet text = params.text ?? "Hello World";\nlet font = params.font ?? "64px Arial";\nlet x = params.x ?? 100;\nlet y = params.y ?? 200;\nlet height = params.height ?? 6;\nlet color = params.color ?? "#FF0000";\n\napp.executeSampleScript(\'Draw text with color\', {text, font, x, y, color});\napp.executeSampleScript(\'3D effect 3\', {numSteps: height});\n',i(["3d","text"],{name:"Draw 3D text",func:new Function("params",u),source:u,params:[{name:"text",type:"string",defaultValue:"Hello World"},{name:"font",type:"string",defaultValue:"64px Arial"},{name:"color",type:"colorHex",defaultValue:"#FF0000"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:6}]}),u='\nlet text = params.text ?? "Neon";\nlet textColor = params.textColor ?? "#FFFFFF";\nlet glowColor = params.glowColor ??  "#FFFF00";\nlet nearColor = params.textColor ?? "#FFFFFF"\nlet blur = params.blur ?? 5;\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\n\nctx.font = params.font ?? "64px Arial";\n\nctx.fillStyle = textColor;\n\nctx.shadowOffsetX = 0;\nctx.shadowOffsetY = 0;\n\nctx.shadowColor = glowColor;\nctx.shadowBlur = blur *4;\nctx.fillText(text, x, y);\n\nctx.shadowColor = glowColor;\nctx.shadowBlur = blur *3;\nctx.fillText(text, x, y);\n\nctx.shadowColor = glowColor;\nctx.shadowBlur = blur * 2;\nctx.fillText(text, x, y);\n\nctx.shadowColor = nearColor;\nctx.shadowBlur = blur;\nctx.fillText(text, x, y);\nctx.fillText(text, x, y);\n',i(["filters","glow","text"],{name:"Glow text",func:new Function("params",u),source:u,params:[{name:"text",type:"string",defaultValue:"Text"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"glowColor",type:"colorHex",defaultValue:"#FFFF00"},{name:"blur",type:"number",defaultValue:5},{name:"font",type:"string",defaultValue:"64px Arial"},{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200}]}),u='\nctx.fillStyle = "#FFFFFF";\nctx.fillRect(0, 0, 600, 400);\n',i(["basic drawing"],{name:"Fill screen white",func:new Function("params",u),source:u}),u='\nctx.fillStyle = "#000000";\nctx.fillRect(0, 0, 600, 400);\n',i(["basic drawing"],{name:"Fill screen black",func:new Function("params",u),source:u}),u="\nctx.fillRect(0, 0, 600, 400);\n",i(["basic drawing"],{name:"Fill with current fillStyle",func:new Function("params",u),source:u}),u="\nvar img = new Image();\nimg.addEventListener('load', function() {\n  ctx.drawImage(img, 100, 100);\n}, false);\nimg.src = 'https://mdn.mozillademos.org/files/222/Canvas_createpattern.png';\n",i(["basic drawing","image"],{name:"Draw image from URL",func:new Function("params",u),source:u}),u='\nlet imageName = params.imageName ?? "";\nlet x = params.x ?? 0;\nlet y = params.y ?? 0;\n\nlet image = app.getImageByName(imageName);\n\nif (image != null) {\n  var img = new Image();\n  img.src = image.url;\n  ctx.drawImage(img, x, y);\n}\n',i(["basic drawing","image"],{name:"Draw image",func:new Function("params",u),source:u,params:[{name:"imageName",type:"string",defaultValue:""},{name:"x",type:"number",defaultValue:0},{name:"y",type:"number",defaultValue:0}]}),u='\nlet imageName = params.imageName ?? "";\nlet x = params.x ?? 0;\nlet y = params.y ?? 0;\nlet width = params.width ?? 100;\nlet height = params.height ?? 100;\n\nlet image = app.getImageByName(imageName);\n\nif (image != null) {\n  var img = new Image();\n  img.src = image.url;\n  ctx.drawImage(img, x, y, width, height);\n}\n',i(["basic drawing","image"],{name:"Draw image scaled",func:new Function("params",u),source:u,params:[{name:"imageName",type:"string",defaultValue:""},{name:"x",type:"number",defaultValue:0},{name:"y",type:"number",defaultValue:0},{name:"width",type:"number",defaultValue:100},{name:"height",type:"number",defaultValue:100}]}),u="\napp.log('message');\n",i(["other"],{name:"Log",func:new Function("params",u),source:u}),u="\nlet random = $util.random256();\napp.log('random256 = ' + random);\n",i(["other","util","math"],{name:"Random 256",func:new Function("params",u),source:u}),u="\nlet random = Math.random();\napp.log('random = ' + random);\n",i(["math"],{name:"Random number",func:new Function("params",u),source:u}),u="\nparams.numSteps = params.numSteps || 10;\nlet dxOffset = params.dxStep != null ? params.dxStep : 0;\nlet dyOffset = params.dyStep != null ? params.dyStep : -1;\n\nlet canvasClone = $util.cloneCanvas(app.getCurrentLayer().canvas);\n\ndx = 0;\ndy = 0;\nfor (let i=0; i<params.numSteps; i++) {\n  dx += dxOffset;\n  dy += dyOffset;\n  ctx.drawImage(canvasClone, dx, dy);\n}\n",i(["filters"],{name:"3D effect",func:new Function("params",u),source:u,params:[{name:"numSteps",type:"number",defaultValue:10},{name:"dxStep",type:"number",defaultValue:0},{name:"dyStep",type:"number",defaultValue:-1}]}),u="\nlet numSteps = params.numSteps ?? 10;\nlet dxStep = params.dxStep ?? 0;\nlet dyStep = params.dyStep ?? 1;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.duplicateLayer(originalLayerName, '_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\napp.executeSampleScript('Darker', {amount: 100});\napp.executeSampleScript('3D effect', {numSteps: numSteps, dxStep: dxStep, dyStep: dyStep});\nctx.drawImage(app.getLayerByName(originalLayerName).canvas, 0, 0);\n\napp.setCurrentLayer(originalLayerName);\nctx.clearRect(0,0,600,400);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_01');\n",i(["filters"],{name:"3D effect 2",func:new Function("params",u),source:u}),u="\nlet numSteps = params.numSteps ?? 6;\nlet dxStep = params.dxStep ?? 0;\nlet dyStep = params.dyStep ?? 1;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.duplicateLayer(originalLayerName, '_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\napp.executeSampleScript('Darker', {amount: 100});\napp.executeSampleScript('3D effect', {numSteps: numSteps, dxStep: dxStep, dyStep: dyStep});\napp.executeSampleScript('Add border', {amount: 2, lightOffset: -100});\n\napp.duplicateLayer(originalLayerName, '_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\napp.executeSampleScript('Add border', {amount: 1, lightOffset: -120});\n\napp.setCurrentLayer(originalLayerName);\nctx.clearRect(0,0,600,400);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_01');\napp.deleteLayerByName('_temp_layer_02');\n",i(["filters"],{name:"3D effect 3",func:new Function("params",u),source:u}),u='\nlet faceRadius = params.faceRadius ?? 100;\nlet eyeSpacing = params.eyeSpacing ?? 40;\nlet eyeInnerRadius = params.eyeInnerRadius ?? 8;\nlet eyeOuterRadius = params.eyeOuterRadius ?? 25;\nlet eyeBrowOffset = params.eyeBrowOffset ?? 10;\nlet eyeOffsetX = params.eyeOffsetX ?? 0;\nlet eyeBallOffsetX = params.eyeBallOffsetX ?? 0;\nlet eyeBallOffsetY = params.eyeBallOffsetY ?? 0;\nlet eyeBallDirectionOffset = params.eyeBallDirectionOffset ?? 0;\nlet mouthRadius = params.mouthRadius ?? 20;\nlet faceColor = params.faceColor ?? "#FF6633";\nlet mouthColor  = params.mouthColor ?? "#660000";\nlet eyeBrowWidth = params.eyeBrowWidth ?? 5;\nlet eyeBrowAngle = params.eyeBrowAngle ?? 0.5;\n\n//face\nctx.beginPath();\nctx.fillStyle = faceColor;\nctx.arc(200, 150, faceRadius, 0, 2 * Math.PI);\nctx.fill();\n\n//mouth\nctx.beginPath();\nctx.fillStyle = mouthColor;\nctx.arc(200+eyeOffsetX, 210, mouthRadius, 0, 2 * Math.PI);\nctx.fill();\n\n//first eye\nctx.beginPath();\nctx.fillStyle = "#FFFFFF";\nctx.arc(200-eyeSpacing+eyeOffsetX, 120, eyeOuterRadius, 0, 2 * Math.PI);\nctx.fill();\nctx.beginPath();\nctx.fillStyle = "#000000";\nctx.arc(200-eyeSpacing+eyeOffsetX+eyeBallOffsetX+eyeBallDirectionOffset, 120+eyeBallOffsetY, eyeInnerRadius, 0, 2 * Math.PI);\nctx.fill();\n\n//second eye\nctx.beginPath();\nctx.fillStyle = "#FFFFFF";\nctx.arc(200+eyeSpacing+eyeOffsetX, 120, eyeOuterRadius, 0, 2 * Math.PI);\nctx.fill();\nctx.beginPath();\nctx.fillStyle = "#000000";\nctx.arc(200+eyeSpacing+eyeOffsetX+eyeBallOffsetX-eyeBallDirectionOffset, 120+eyeBallOffsetY, eyeInnerRadius, 0, 2 * Math.PI);\nctx.fill();\n\nctx.lineWidth = eyeBrowWidth;\n\n//eyebrow 1\nctx.beginPath();\nctx.fillStyle = "#000000";\nctx.arc(200-eyeSpacing+eyeOffsetX, 120, eyeOuterRadius + eyeBrowOffset, 12/8*Math.PI - eyeBrowAngle, 12/8*Math.PI + eyeBrowAngle);\nctx.stroke();\n\n//eyebrow 2\nctx.beginPath();\nctx.fillStyle = "#000000";\nctx.arc(200+eyeSpacing+eyeOffsetX, 120, eyeOuterRadius + eyeBrowOffset, 12/8*Math.PI - eyeBrowAngle, 12/8*Math.PI + eyeBrowAngle);\nctx.stroke();\n',i(["other"],{name:"Draw face",func:new Function("params",u),source:u,params:[{name:"faceRadius",type:"number",defaultValue:100},{name:"faceColor",type:"colorHex",defaultValue:"#FF6633"},{name:"mouthRadius",type:"number",defaultValue:20},{name:"mouthColor",type:"colorHex",defaultValue:"#660000"},{name:"eyeInnerRadius",type:"number",defaultValue:8},{name:"eyeOuterRadius",type:"number",defaultValue:25},{name:"eyeSpacing",type:"number",defaultValue:40},{name:"eyeBrowOffset",type:"number",defaultValue:10},{name:"eyeOffsetX",type:"number",defaultValue:0},{name:"eyeBallOffsetX",type:"number",defaultValue:0},{name:"eyeBallOffsetY",type:"number",defaultValue:0},{name:"eyeBrowWidth",type:"number",defaultValue:5},{name:"eyeBrowAngle",type:"number",defaultValue:.5},{name:"eyeBallDirectionOffset",type:"number",defaultValue:0}]}),u="\nlet font = params.font ?? \"92px Comfortaa\";\nlet text = params.text ?? \"My Logo\";\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\nlet gradientStartY = params.gradientStartY ?? 25;\nlet gradientEndY = params.gradientEndY ?? 225;\nlet gradientColor1 = params.gradientColor1 ?? \"#FFFFFF\";\nlet gradientColor2 = params.gradientColor2 ?? \"#FF0000\";\nlet gradientColor3 = params.gradientColor3 ?? \"#000000\";\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nvar grd = ctx.createLinearGradient(0, gradientStartY, 0, gradientEndY);\ngrd.addColorStop(0, gradientColor1);\ngrd.addColorStop(0.5, gradientColor2);\ngrd.addColorStop(1, gradientColor3);\nctx.fillStyle = grd;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:2});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:5});\n\napp.addLayerWithName('_temp_layer_03');\napp.setCurrentLayer('_temp_layer_03');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:8});\napp.executeSampleScript('Set image color', {r:255,g:255,b:255});\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_03').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_03');\napp.deleteLayerByName('_temp_layer_02');\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 01",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"92px Comfortaa"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150},{name:"gradientStartY",type:"number",defaultValue:25},{name:"gradientEndY",type:"number",defaultValue:225},{name:"gradientColor1",type:"colorHex",defaultValue:"#FFFFFF"},{name:"gradientColor2",type:"colorHex",defaultValue:"#FF0000"},{name:"gradientColor3",type:"colorHex",defaultValue:"#000000"}]}),u="\nlet font = params.font ?? \"48px Comfortaa\";\nlet text = params.text ?? \"My Logo\";\nlet borderColor = params.borderColor ?? \"#3333AA\";\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\nlet shadowColor = params.shadowColor ?? \"#222288\";\nlet color2 = $util.hexToRgb(shadowColor);\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nctx.font = font;\nctx.fillStyle = \"#FFFFFF\";\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:2});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nctx.font = font;\nctx.fillStyle = borderColor;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:7});\n\napp.duplicateLayer('_temp_layer_02', '_temp_layer_03');\napp.setCurrentLayer('_temp_layer_03');\napp.executeSampleScript('3D effect', {canvasIndex: 3, dyStep: 1, numSteps: 5});\napp.executeSampleScript('Set image color', color2);\n\napp.addLayerWithName('_temp_layer_04');\napp.setCurrentLayer('_temp_layer_04');\nctx.drawImage(app.getLayerByName('_temp_layer_03').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\n\napp.duplicateLayer('_temp_layer_04', '_temp_layer_05');\napp.setCurrentLayer('_temp_layer_05');\napp.executeSampleScript('Set image color', {r: 255, g: 255, b: 255});\napp.executeSampleScript('Grow', {amount:3});\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_05').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_04').canvas, 0, 0);\n\napp.deleteLayerByName('_temp_layer_05');\napp.deleteLayerByName('_temp_layer_04');\napp.deleteLayerByName('_temp_layer_03');\napp.deleteLayerByName('_temp_layer_02');\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 02",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"48px Comfortaa"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150},{name:"borderColor",type:"colorHex",defaultValue:"#3333AA"},{name:"shadowColor",type:"colorHex",defaultValue:"#222288"}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ??  \"72px Comfortaa\";\nlet x = params.x ??  100;\nlet y = params.y ??  150;\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet grow = params.grow ?? 2;\nlet borderSize = params.borderSize ?? 4;\nlet lightOffset = params.lightOffset ?? 150;\n\nlet originalLayerName = app.getCurrentLayer().name;\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nctx.font = font;\nctx.fillStyle = fillStyle;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow});\napp.executeSampleScript('Add double border', {amount:borderSize, lightOffset: lightOffset});\n\nctx.shadowBlur = 10;\nctx.shadowColor = \"black\";\napp.executeSampleScript('Repaint');\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\n\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 03",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"72px Comfortaa"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"grow",type:"number",defaultValue:2},{name:"borderSize",type:"number",defaultValue:4},{name:"lightOffset",type:"number",defaultValue:150},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ??  \"92px Arial\";\nlet x = params.x ??  100;\nlet y = params.y ??  150;\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet grow = params.grow ?? 4;\nlet border1 = params.border1 ?? 3;\nlet border2 = params.border2 ?? 5;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow + border1});\n\napp.addLayerWithName('_temp_layer_03');\napp.setCurrentLayer('_temp_layer_03');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow + border1 + border2});\napp.executeSampleScript('Set image color', {r:255,g:255,b:255});\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_03').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_03');\napp.deleteLayerByName('_temp_layer_02');\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 04",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"92px Arial"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"grow",type:"number",defaultValue:4},{name:"border1",type:"number",defaultValue:3},{name:"border2",type:"number",defaultValue:5},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ??  \"92px Arial\";\nlet x = params.x ??  100;\nlet y = params.y ??  150;\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet grow = params.grow ?? 4;\nlet border1 = params.border1 ?? 3;\nlet border2 = params.border2 ?? 5;\nlet shadowBlur = params.shadowBlur ?? 10;\nlet shadowColor = params.shadowColor ?? \"#000000\";\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow + border1});\n\napp.addLayerWithName('_temp_layer_03');\napp.setCurrentLayer('_temp_layer_03');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow + border1 + border2});\napp.executeSampleScript('Set image color', {r:255,g:255,b:255});\n\napp.addLayerWithName('_temp_layer_04');\napp.setCurrentLayer('_temp_layer_04');\nctx.drawImage(app.getLayerByName('_temp_layer_03').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\nctx.shadowBlur = shadowBlur;\nctx.shadowColor = shadowColor;\napp.executeSampleScript('Repaint');\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_04').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_04');\napp.deleteLayerByName('_temp_layer_03');\napp.deleteLayerByName('_temp_layer_02');\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 05",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"92px Arial"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"grow",type:"number",defaultValue:4},{name:"border1",type:"number",defaultValue:3},{name:"border2",type:"number",defaultValue:5},{name:"shadowBlur",type:"number",defaultValue:10},{name:"shadowColor",type:"colorHex",defaultValue:"#000000"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ??  \"64px Comfortaa\";\nlet x = params.x ??  100;\nlet y = params.y ??  150;\nlet gradientColor1 = params.gradientColor1 ?? \"#FF0000\";\nlet gradientColor2 = params.gradientColor2 ?? \"#FFFF00\";\nlet gradientStartY = params.gradientStartY ?? 100;\nlet gradientEndY = params.gradientEndY ?? 175;\nlet grow = params.grow ?? 2;\nlet borderSize = params.borderSize ?? 3;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nvar grd = ctx.createLinearGradient(0, gradientStartY, 0, gradientEndY);\ngrd.addColorStop(0, gradientColor1);\ngrd.addColorStop(1, gradientColor2);\nctx.fillStyle = grd;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow', {amount:grow + borderSize});\n\napp.addLayerWithName('_temp_layer_03');\napp.setCurrentLayer('_temp_layer_03');\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\nctx.shadowBlur = 10;\nctx.shadowColor = \"black\";\napp.executeSampleScript('Repaint');\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_03').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_03');\napp.deleteLayerByName('_temp_layer_02');\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 06",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"64px Comfortaa"},{name:"gradientColor1",type:"colorHex",defaultValue:"#FF0000"},{name:"gradientColor2",type:"colorHex",defaultValue:"#FFFF00"},{name:"gradientStartY",type:"number",defaultValue:100},{name:"gradientEndY",type:"number",defaultValue:175},{name:"grow",type:"number",defaultValue:2},{name:"borderSize",type:"number",defaultValue:3},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ??  \"60px Comfortaa\";\nlet fillStyle = params.fillStyle ?? \"#FFC800\";\nlet fillStyleShadow = params.fillStyleShadow ?? \"#C86400\";\nlet grow = params.grow ?? 2;\nlet height = params.height ?? 4;\nlet borderSize = params.borderSize ?? 2;\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow',{amount:grow});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nctx.fillStyle = fillStyleShadow;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow',{amount:grow});\napp.executeSampleScript('3D effect', {canvasIndex:2, numSteps:height, dxStep:1, dyStep:0});\n\napp.addLayerWithName('_temp_layer_03');\napp.setCurrentLayer('_temp_layer_03');\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\napp.executeSampleScript('Add color border',{amount:borderSize, r:0, g:0, b:0});\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_03').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_03');\napp.deleteLayerByName('_temp_layer_02');\napp.deleteLayerByName('_temp_layer_01');\n",i(["logos"],{name:"Logo 07",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"60px Comfortaa"},{name:"fillStyle",type:"colorHex",defaultValue:"#FFC800"},{name:"fillStyleShadow",type:"colorHex",defaultValue:"#C86400"},{name:"grow",type:"number",defaultValue:2},{name:"height",type:"number",defaultValue:4},{name:"borderSize",type:"number",defaultValue:2},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ??  \"60px Comfortaa\";\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet shadowColor = params.shadowColor ?? \"#000000\";\nlet grow = params.grow ?? 2;\nlet height = params.height ?? 4;\nlet x = params.x ??  100;\nlet y = params.y ??  150;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow',{amount:grow});\napp.executeSampleScript('3D effect 3', {numSteps: height});\n\napp.setCurrentLayer(originalLayerName);\nctx.shadowBlur = 5;\nctx.shadowColor = shadowColor;\nctx.shadowOffsetX = 2;\nctx.shadowOffsetY = 2;\nctx.drawImage(app.getLayerByName('_temp_layer_001').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_001');\n",i(["logos"],{name:"Logo 08",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"60px Comfortaa"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"shadowColor",type:"colorHex",defaultValue:"#000000"},{name:"grow",type:"number",defaultValue:2},{name:"height",type:"number",defaultValue:4},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150}]}),u="\nlet text = params.text ?? \"My Logo\";\nlet font = params.font ?? \"60px Comfortaa\";\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet grow = params.grow ?? 3;\nlet borderSize = params.borderSize ?? 2;\nlet x = params.x ?? 200;\nlet y = params.y ?? 200;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\napp.executeSampleScript('Grow',{amount:grow});\napp.executeSampleScript('Add color border',{amount:borderSize, r:0, g:0, b:0});\n\nctx.shadowBlur = 5;\nctx.shadowColor = \"#000000\";\nctx.shadowOffsetX = 5;\nctx.shadowOffsetY = 5;\n\napp.executeSampleScript('Repaint');\n\napp.setCurrentLayer(originalLayerName);\n\nctx.drawImage(app.getLayerByName('_temp_layer_001').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_001');\n",i(["logos"],{name:"Logo 09",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"My Logo"},{name:"font",defaultValue:"60px Comfortaa"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"grow",type:"number",defaultValue:3},{name:"borderSize",type:"number",defaultValue:2},{name:"x",type:"number",defaultValue:200},{name:"y",type:"number",defaultValue:200}]}),u="\nlet text = params.text ?? \"Hello World\";\nlet font = params.font ?? \"60px Arial\";\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet grow = params.grow ?? 2;\nlet borderSize = params.borderSize ?? 2;\nlet x = params.x ?? 100;\nlet y = params.y ?? 100;\nlet verticalSkewing = params.verticalSkewing ?? 0.5;\nlet horizontalSkewing = params.horizontalSkewing ?? 0;\nlet height = params.height ?? 20;\nlet dxStep = params.dxStep ?? -0.5;\nlet dyStep = params.dyStep ?? 0.5;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\n\nctx.save();\nctx.setTransform(1,verticalSkewing,horizontalSkewing,1,0,0);\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\nctx.restore();\n\napp.executeSampleScript('Grow',{amount:grow});\napp.executeSampleScript('Add color border',{amount:borderSize, r:0, g:0, b:0});\napp.executeSampleScript('3D effect',{numSteps:height, dxStep:dxStep, dyStep:dyStep});\n\n\napp.setCurrentLayer(originalLayerName);\n\nctx.drawImage(app.getLayerByName('_temp_layer_001').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_001');\n",i(["logos"],{name:"Logo 10",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Hello World"},{name:"font",defaultValue:"60px Arial"},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"grow",type:"number",defaultValue:2},{name:"borderSize",type:"number",defaultValue:2},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:100},{name:"verticalSkewing",type:"number",defaultValue:.5},{name:"horizontalSkewing",type:"number",defaultValue:0},{name:"height",type:"number",defaultValue:20},{name:"dxStep",type:"number",defaultValue:-.5},{name:"dyStep",type:"number",defaultValue:.5}]}),u='\nlet text = params.text ?? \'Button\';\nlet buttonX = params.x ?? 300;\nlet buttonY = params.y ?? 200;\nlet buttonHeight = params.height ?? 100;\nlet buttonWidth = params.width ?? 200;\nlet textColor = params.textColor ?? "#FFFFFF";\nlet buttonColor = params.buttonColor ?? "#000066";\nlet font = params.font ?? "48px Arial";\n\nctx.strokeStyle = buttonColor;\nctx.lineWidth = buttonHeight;\nctx.lineCap = \'round\';\nctx.beginPath();\nctx.moveTo(buttonX - buttonWidth/2, buttonY);\nctx.lineTo(buttonX + buttonWidth/2, buttonY);\nctx.stroke();\n\nctx.font = font;\nctx.fillStyle = textColor;\nctx.textAlign = "center";\nctx.textBaseline = \'middle\';\nctx.fillText(text, buttonX, buttonY);\n',i(["buttons"],{name:"Round button",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Button"},{name:"font",defaultValue:"48px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor",type:"colorHex",defaultValue:"#000066"},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:100},{name:"width",type:"number",defaultValue:200}]}),u='\nlet text = params.text ?? \'Button\';\nlet buttonX = params.x ?? 300;\nlet buttonY = params.y ?? 200;\nlet buttonHeight = params.height ?? 100;\nlet buttonWidth = params.width ?? 200;\nlet textColor = params.textColor ?? "#FFFFFF";\nlet buttonColor1 = params.buttonColor1 ?? "#FF0000";\nlet buttonColor2 = params.buttonColor2 ?? "#FFAA00";\nlet font = params.font ?? "48px Arial";\n\nvar grd = ctx.createLinearGradient(0, 200, 600, 200);\ngrd.addColorStop(0, buttonColor1);\ngrd.addColorStop(1, buttonColor2);\n\nctx.strokeStyle = grd;\nctx.lineWidth = buttonHeight;\nctx.lineCap = \'round\';\nctx.beginPath();\nctx.moveTo(buttonX - buttonWidth/2, buttonY);\nctx.lineTo(buttonX + buttonWidth/2, buttonY);\nctx.stroke();\n\nctx.font = font;\nctx.fillStyle = textColor;\nctx.textAlign = "center";\nctx.textBaseline = \'middle\';\nctx.fillText(text, buttonX, buttonY);\n',i(["buttons"],{name:"Gradient round button",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Button"},{name:"font",defaultValue:"48px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor1",type:"colorHex",defaultValue:"#FF0000"},{name:"buttonColor2",type:"colorHex",defaultValue:"#FFAA00"},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:100}]}),u="\nlet x = params.x ?? 100;\nlet y = params.y ?? 100;\nlet w = params.width ?? 150;\nlet h = params.height ?? 50;\nlet r = params.radius ?? 15;\n\nif (w < 2 * r) r = w / 2;\nif (h < 2 * r) r = h / 2;\nctx.beginPath();\nctx.moveTo(x+r, y);\nctx.arcTo(x+w, y,   x+w, y+h, r);\nctx.arcTo(x+w, y+h, x,   y+h, r);\nctx.arcTo(x,   y+h, x,   y,   r);\nctx.arcTo(x,   y,   x+w, y,   r);\nctx.closePath()\nctx.stroke();\n",i(["basic drawing"],{name:"Draw round rect",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:100},{name:"width",type:"number",defaultValue:150},{name:"height",type:"number",defaultValue:50},{name:"radius",type:"number",defaultValue:15}]}),u="\nlet x = params.x ?? 100;\nlet y = params.y ?? 100;\nlet w = params.width ?? 150;\nlet h = params.height ?? 50;\nlet r = params.radius ?? 15;\n\nif (w < 2 * r) r = w / 2;\nif (h < 2 * r) r = h / 2;\nctx.beginPath();\nctx.moveTo(x+r, y);\nctx.arcTo(x+w, y,   x+w, y+h, r);\nctx.arcTo(x+w, y+h, x,   y+h, r);\nctx.arcTo(x,   y+h, x,   y,   r);\nctx.arcTo(x,   y,   x+w, y,   r);\nctx.closePath()\nctx.fill();\n",i(["basic drawing"],{name:"Fill round rect",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:100},{name:"width",type:"number",defaultValue:150},{name:"height",type:"number",defaultValue:50},{name:"radius",type:"number",defaultValue:15}]}),u='\nlet text = params.text ?? \'Button\';\nlet buttonX = params.x ?? 300;\nlet buttonY = params.y ?? 200;\nlet buttonHeight = params.height ?? 50;\nlet buttonWidth = params.width ?? 200;\nlet buttonRadius = params.borderRadius ?? 10;\nlet textColor = params.textColor ?? "#FFFFFF";\nlet buttonColor = params.buttonColor ?? "#3333CC";\nlet font = params.font ?? "18px Arial";\n\nctx.fillStyle = buttonColor;\n\napp.executeSampleScript(\'Fill round rect\', {x:buttonX - buttonWidth/2, y:buttonY - buttonHeight/2, width:buttonWidth, height:buttonHeight, radius:buttonRadius});\n\nctx.font = font;\nctx.fillStyle = textColor;\nctx.textAlign = "center";\nctx.textBaseline = \'middle\';\nctx.fillText(text, buttonX, buttonY);\n',i(["buttons"],{name:"Round button 2",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Button"},{name:"font",defaultValue:"18px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor",type:"colorHex",defaultValue:"#3333CC"},{name:"borderRadius",type:"number",defaultValue:10},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:50}]}),u="\nlet text = params.text ?? 'Button';\nlet buttonX = params.x ?? 300;\nlet buttonY = params.y ?? 200;\nlet buttonHeight = params.height ?? 50;\nlet buttonWidth = params.width ?? 200;\nlet buttonRadius = params.borderRadius ?? 10;\nlet borderSize = params.borderSize ?? 4;\nlet textColor = params.textColor ?? \"#FFFFFF\";\nlet buttonColor = params.buttonColor ?? \"#33AACC\";\nlet borderColor = params.borderColor ?? \"#FFFFFF\";\nlet font = params.font ?? \"28px Arial\";\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\n\nctx.fillStyle = buttonColor;\n\napp.executeSampleScript('Fill round rect', {x:buttonX - buttonWidth/2, y:buttonY - buttonHeight/2, width:buttonWidth, height:buttonHeight, radius:buttonRadius});\n\napp.addLayerWithName('_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\n\nctx.fillStyle = textColor;\nctx.textAlign = \"center\";\nctx.textBaseline = 'middle';\nctx.font = font;\nctx.fillText(text, buttonX, buttonY);\n\napp.executeSampleScript('Grow', {amount: 1});\napp.executeSampleScript('Add shadow', {shadowBlur: 0, shadowColor: \"#00000099\", shadowOffsetX: 2, shadowOffsetY: 2});\n\napp.setCurrentLayer('_temp_layer_01');\nctx.drawImage(app.getLayerByName('_temp_layer_02').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_02');\n\nlet borderParams = $util.hexToRgb(borderColor);\nborderParams.amount = borderSize;\napp.executeSampleScript('Add color border', borderParams);\n\napp.executeSampleScript('Add shadow', {shadowBlur: 0, shadowOffsetX: 5, shadowOffsetY: 5});\n\napp.setCurrentLayer(originalLayerName);\nctx.drawImage(app.getLayerByName('_temp_layer_01').canvas, 0, 0);\napp.deleteLayerByName('_temp_layer_01');\n",i(["buttons"],{name:"Round button 3",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Button"},{name:"font",defaultValue:"28px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor",type:"colorHex",defaultValue:"#33AACC"},{name:"borderRadius",type:"number",defaultValue:10},{name:"borderSize",type:"number",defaultValue:4},{name:"borderColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:50}]}),u='\nlet text = params.text ?? \'Button\';\nlet buttonX = params.x ?? 300;\nlet buttonY = params.y ?? 200;\nlet buttonHeight = params.height ?? 50;\nlet buttonWidth = params.width ?? 200;\nlet buttonRadius = params.borderRadius ?? 10;\nlet textColor = params.textColor ?? "#FFFFFF";\nlet buttonColor1 = params.buttonColor1 ?? "#FF0000";\nlet buttonColor2 = params.buttonColor2 ?? "#FFAA00";\nlet font = params.font ?? "18px Arial";\n\nlet gradientStartX = buttonX - buttonWidth/2;\nlet gradientEndX = buttonX + buttonWidth/2;\n\nvar grd = ctx.createLinearGradient(gradientStartX, buttonY, gradientEndX, buttonY);\ngrd.addColorStop(0, buttonColor1);\ngrd.addColorStop(1, buttonColor2);\n\nctx.fillStyle = grd;\n\napp.executeSampleScript(\'Fill round rect\', {x:buttonX - buttonWidth/2, y:buttonY - buttonHeight/2, width:buttonWidth, height:buttonHeight, radius:buttonRadius});\n\nctx.font = font;\nctx.fillStyle = textColor;\nctx.textAlign = "center";\nctx.textBaseline = \'middle\';\nctx.fillText(text, buttonX, buttonY);\n',i(["buttons"],{name:"Gradient round button 2",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Button"},{name:"font",defaultValue:"18px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor1",type:"colorHex",defaultValue:"#FF0000"},{name:"buttonColor2",type:"colorHex",defaultValue:"#FFAA00"},{name:"borderRadius",type:"number",defaultValue:10},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:50}]}),u="\napp.executeSampleScript('Gradient round button 2', params);\napp.executeSampleScript('3D effect 3');\n",i(["buttons"],{name:"3D gradient round button",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"Button"},{name:"font",defaultValue:"18px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor1",type:"colorHex",defaultValue:"#FF0000"},{name:"buttonColor2",type:"colorHex",defaultValue:"#FFAA00"},{name:"borderRadius",type:"number",defaultValue:10},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:200},{name:"height",type:"number",defaultValue:50}]}),u="\nlet amount = params.amount || 50;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nconst imageData = ctx.getImageData(0, 0, width, height);\n\n// Iterate through every pixel\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  // Modify pixel data\n  imageData.data[i + 0] += Math.random()*amount - amount/2; // R value\n  imageData.data[i + 1] += Math.random()*amount - amount/2; // G value\n  imageData.data[i + 2] += Math.random()*amount - amount/2; // B value\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["filters"],{name:"Noise",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:50}]}),u='\nlet color = "#0066aa";\nlet borderColor = "#666666";\nlet borderSize = 1;\nlet lightSize = 2;\nlet x = 200;\nlet y = 200;\nlet w = 20;\nlet h = 20;\n\nlet colorRgb = $util.hexToRgb(color);\nlet lighterColorRgb = $util.rgbAdd(colorRgb, 30);\nlet lightColor = $util.rgbToHex(lighterColorRgb);\n\nctx.fillStyle=borderColor;\nctx.fillRect(x, y, w, h);\nctx.fillStyle=lightColor;\nctx.fillRect(x + borderSize, y + borderSize, w - 2 * borderSize, h - 2 * borderSize);\nctx.fillStyle=color;\nctx.fillRect(x + borderSize + lightSize, y + borderSize + lightSize, w - 2 * borderSize - 2 * lightSize, h - 2 * borderSize - 2 * lightSize);\n',i(["shapes"],{name:"Bordered square",func:new Function("params",u),source:u}),u="\nlet x = params.x ?? 300;\nlet y = params.y ?? 200;\nlet size = params.size ?? 200;\nlet startAngle = params.startAngle ?? 0;\nlet endAngle = params.endAngle ?? 2 * Math.PI / 24;\n\nctx.beginPath();\nctx.arc(x, y, size, startAngle, endAngle);\nctx.lineTo(x,y);\nctx.fill();\n",i(["other"],{name:"Fill ray",func:new Function("params",u),source:u}),u='\nlet x = params.x ?? 300;\nlet y = params.y ?? 200;\nlet size = params.size ?? 400;\nlet numRays = params.numRays ?? 48;\nlet color1 = params.color1 ?? "#ff6600";\nlet color2 = params.color2 ?? "#ffcc00";\n\nlet offset = 2 * Math.PI / numRays;\n\nlet startAngle = 0;\nlet endAngle = startAngle + offset;\n\nctx.save();\n\nctx.beginPath();\nctx.globalAlpha = 0;\nctx.arc(x, y, size, 0, 2 * Math.PI);\nctx.stroke();\nctx.globalAlpha = 1;\nctx.clip();\n\nctx.fillStyle = color1;\nctx.fillRect(0,0,600,400);\nctx.fillStyle = color2;\n\nfor (let i=0; i<numRays; i += 2) {\n  app.executeSampleScript(\'Fill ray\', {x:x, y:y, size:size, startAngle:startAngle, endAngle:endAngle});\n  startAngle += 2 * offset;\n  endAngle += 2 * offset;\n}\n\nctx.restore();\n',i(["other","backgrounds"],{name:"Sunburst effect",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"size",type:"number",defaultValue:400},{name:"numRays",type:"number",defaultValue:48},{name:"color1",type:"colorHex",defaultValue:"#ff6600"},{name:"color2",type:"colorHex",defaultValue:"#ffcc00"}]}),u='\nlet text = "Hello World";\nctx.font = "64px Arial";\nlet x = 110;\nlet y = 200;\nlet colors = ["#ff0000","#00ff00","#0000ff"];\n\nfor (let i=0; i<text.length; i++) {\n  let letter = text.substring(i, i+1);\n  ctx.fillStyle = colors[i % colors.length];\n  ctx.fillText(letter, x, y);\n  x += ctx.measureText(letter).width;\n}\n',i(["text","color"],{name:"Letters with different colors",func:new Function("params",u),source:u}),u="\nctx.translate(100, 50);\n",i(["context"],{name:"Translate",func:new Function("params",u),source:u}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\nconst imageData = ctx.getImageData(0, 0, width, height);\n\nlet newImageData = $util.convolute(imageData, [1,0,0, 0,0,0, 0,0,-1], false);\n\nctx.putImageData(newImageData, 0, 0);\n",i(["filters"],{name:"Convolute",func:new Function("params",u),source:u}),u="\nlet defaultWeights = [1,0,0, 0,0,0, 0,0,-1];\nlet weights = params.weights ?? defaultWeights;\nlet opaque = false;\n$util.convoluteLayer(ctx, weights, opaque);\n",i(["filters"],{name:"Convolute layer",func:new Function("params",u),source:u}),u='\nlet souceLayerName = params.souceLayerName ?? "layer01";\nlet targetLayerName = params.targetLayerName ?? "layer02";\n\nlet originalLayerName = app.getCurrentLayer().name;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\napp.setCurrentLayer(souceLayerName);\nlet imageData = ctx.getImageData(0, 0, width, height);\n\napp.setCurrentLayer(targetLayerName);\nctx.putImageData(imageData, 0, 0);\n\napp.setCurrentLayer(originalLayerName);\n',i(["layer","image"],{name:"Clone layer image data",func:new Function("params",u),source:u,params:[{name:"souceLayerName",type:"string",defaultValue:"layer01"},{name:"targetLayerName",type:"string",defaultValue:"layer02"}]}),u="\nlet width = ctx.canvas.width;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\n\nctx.setTransform(-1, 0, 0, 1, width, 0);\n\nctx.drawImage(app.getLayerByName(originalLayerName).canvas, 0, 0);\n\napp.executeSampleScript('Clone layer image data', {souceLayerName: '_temp_layer_001', targetLayerName: originalLayerName});\n\napp.setCurrentLayer(originalLayerName);\napp.deleteLayerByName('_temp_layer_001');\n",i(["layer","image"],{name:"Flip horizontally",func:new Function("params",u),source:u}),u="\nlet height = ctx.canvas.height;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.addLayerWithName('_temp_layer_001');\napp.setCurrentLayer('_temp_layer_001');\n\nctx.setTransform(1, 0, 0, -1, 0, height);\n\nctx.drawImage(app.getLayerByName(originalLayerName).canvas, 0, 0);\n\napp.executeSampleScript('Clone layer image data', {souceLayerName: '_temp_layer_001', targetLayerName: originalLayerName});\n\napp.setCurrentLayer(originalLayerName);\napp.deleteLayerByName('_temp_layer_001');\n",i(["layer","image"],{name:"Flip vertically",func:new Function("params",u),source:u}),u="\nlet x = params.x ?? 300;\nlet y = params.y ?? 250;\n\nlet color = {\n  r: params.red ?? 255,\n  g: params.green ?? 0,\n  b: params.blue ?? 0,\n  a: params.alpha ?? 255\n};\n\n$util.floodFill(ctx, color, x, y);\n",i(["color"],{name:"Bucket fill",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:250},{name:"red",type:"number",defaultValue:255},{name:"green",type:"number",defaultValue:0},{name:"blue",type:"number",defaultValue:0},{name:"alpha",type:"number",defaultValue:255}]}),u="\nlet weights = [0,-1,0, -1,5,-1, 0,-1,0];\napp.executeSampleScript('Convolute layer',{weights: weights});\n",i(["filters"],{name:"Sharpen",func:new Function("params",u),source:u}),u="\nlet weights = [-2,-1,0, -1,1,1, 0,1,2];\napp.executeSampleScript('Convolute layer',{weights: weights});\n",i(["filters"],{name:"Emboss",func:new Function("params",u),source:u}),u="\nlet amount = params.amount ?? 5;\nlet colorDiff = params.colorDiff ?? 3;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet originalLayerName = app.getCurrentLayer().name;\n\napp.duplicateLayer(originalLayerName, '_temp_layer_01');\napp.setCurrentLayer('_temp_layer_01');\nlet weights1 = [1,0,0, 0,0,0, 0,0,-1];\napp.executeSampleScript('Convolute layer', {weights: weights1});\napp.executeSampleScript('Blur layer', {amount: amount});\nconst imageData1 = ctx.getImageData(0, 0, width, height);\n\napp.duplicateLayer(originalLayerName, '_temp_layer_02');\napp.setCurrentLayer('_temp_layer_02');\nlet weights2 = [-1,0,0, 0,0,0, 0,0,1];\napp.executeSampleScript('Convolute layer', {weights: weights2});\napp.executeSampleScript('Blur layer', {amount: amount});\nconst imageData2 = ctx.getImageData(0, 0, width, height);\n\napp.setCurrentLayer(originalLayerName);\nconst imageData = ctx.getImageData(0, 0, width, height);\n\n// Iterate through every pixel\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  // Modify pixel data\n  imageData.data[i + 0] -= (colorDiff * imageData1.data[i + 3]); // R value\n  imageData.data[i + 1] -= (colorDiff * imageData1.data[i + 3]); // G value\n  imageData.data[i + 2] -= (colorDiff * imageData1.data[i + 3]); // B value\n\n  imageData.data[i + 0] += (colorDiff * imageData2.data[i + 3]); // R value\n  imageData.data[i + 1] += (colorDiff * imageData2.data[i + 3]); // G value\n  imageData.data[i + 2] += (colorDiff * imageData2.data[i + 3]); // B value\n}\n\nctx.putImageData(imageData, 0, 0);\n\napp.deleteLayerByName('_temp_layer_01');\napp.deleteLayerByName('_temp_layer_02');\n",i(["filters"],{name:"Emboss 2",func:new Function("params",u),source:u,params:[{name:"amount",type:"number",defaultValue:5},{name:"colorDiff",type:"number",defaultValue:3}]}),u="\nlet angle = params.angle ?? 120;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet tempCanvas = document.createElement('canvas');\ntempCanvas.width = width;\ntempCanvas.height = height;\n\nlet tempCtx = tempCanvas.getContext('2d');\ntempCtx.filter = 'hue-rotate(' + angle + 'deg)';\ntempCtx.drawImage(ctx.canvas, 0, 0);\n\nctx.putImageData(tempCtx.getImageData(0, 0, width, height), 0, 0);\n",i(["filters","color"],{name:"Hue rotate layer",func:new Function("params",u),source:u,params:[{name:"angle",type:"number",defaultValue:120}]}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  let red = imageData.data[i];\n  let green = imageData.data[i+1];\n  let blue = imageData.data[i+2];\n  imageData.data[i] = blue;\n  imageData.data[i+1] = red;\n  imageData.data[i+2] = green;\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["filters","color"],{name:"Hue rotate layer 120",func:new Function("params",u),source:u}),u="\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet tempCanvas = document.createElement('canvas');\ntempCanvas.width = width;\ntempCanvas.height = height;\n\nlet tempCtx = tempCanvas.getContext('2d');\n\nfor (let i=10; i>0; i-=0.3) {\n  let percentage = (100 - (i * 3)) / 100;\n  tempCtx.drawImage(ctx.canvas, i*10, i*6, width * percentage, height * percentage);\n}\n\nctx.putImageData(tempCtx.getImageData(0, 0, width, height), 0, 0);\n",i(["3d","text"],{name:"3D effect 4",func:new Function("params",u),source:u,params:[]}),u="\nlet text = params.text ?? \"Hello World\";\nlet font = params.font ?? \"96px Arial\";\nlet x = params.x ?? 100;\nlet y = params.y ?? 150;\nlet fillStyle = params.fillStyle ?? \"#FF0000\";\nlet grow = params.grow ?? 3;\n\nctx.fillStyle = fillStyle;\nctx.font = font;\nctx.fillText(text, x, y);\n\napp.executeSampleScript('Grow',{amount: grow});\napp.executeSampleScript('Emboss 2',{amount: 3, colorDiff: 1});\napp.executeSampleScript('3D effect 4',{});\napp.executeSampleScript('Darker',{amount: 80});\n\nctx.fillText(text, x, y);\n",i(["3d","text"],{name:"Draw 3D text 2",func:new Function("params",u),source:u,params:[{name:"text",type:"string",defaultValue:"Hello World"},{name:"font",type:"string",defaultValue:"96px Arial"},{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:150},{name:"fillStyle",type:"colorHex",defaultValue:"#FF0000"},{name:"grow",type:"number",defaultValue:3}]}),u="\nlet dx = params.dx ?? 10;\nlet dy = params.dy ?? 10;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet tempCanvas = document.createElement('canvas');\ntempCanvas.width = width;\ntempCanvas.height = height;\n\nlet tempCtx = tempCanvas.getContext('2d');\ntempCtx.translate(dx, dy);\ntempCtx.drawImage(ctx.canvas, dx, dy);\n\nctx.putImageData(tempCtx.getImageData(0, 0, width, height), 0, 0);\n",i(["layer"],{name:"Move layer",func:new Function("params",u),source:u,params:[{name:"dx",type:"number",defaultValue:10},{name:"dy",type:"number",defaultValue:10}]}),u='\nlet verticalSkewing = params.verticalSkewing ?? 0.5;\nlet horizontalSkewing = params.horizontalSkewing ?? 0;\nlet x = params.x ?? 100;\nlet y = params.y ?? 100;\nlet text = params.text ?? "Hello World";\nlet font = params.font ?? "64px Arial";\n\n\nctx.save();\nctx.setTransform(1,verticalSkewing,horizontalSkewing,1,0,0);\nctx.font = font;\nctx.fillText(text, x, y);\nctx.restore();\n',i(["text"],{name:"Skewed text",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:100},{name:"text",type:"string",defaultValue:"Hello World"},{name:"font",type:"string",defaultValue:"64px Arial"},{name:"verticalSkewing",type:"number",defaultValue:.5},{name:"horizontalSkewing",type:"number",defaultValue:0}]}),u='\nlet verticalSkewing = params.verticalSkewing ?? 0.5;\nlet horizontalSkewing = params.horizontalSkewing ?? 0;\nlet x = params.x ?? 100;\nlet y = params.y ?? 100;\nlet text = params.text ?? "Hello World";\nlet font = params.font ?? "64px Arial";\nlet fillStyle = params.color ?? "#FF0000";\n\n\nctx.save();\nctx.setTransform(1,verticalSkewing,horizontalSkewing,1,0,0);\nctx.font = font;\nctx.fillStyle = fillStyle;\nctx.fillText(text, x, y);\nctx.restore();\n',i(["text"],{name:"Skewed text with color",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:100},{name:"y",type:"number",defaultValue:100},{name:"text",type:"string",defaultValue:"Hello World"},{name:"font",type:"string",defaultValue:"64px Arial"},{name:"color",type:"colorHex",defaultValue:"#FF0000"},{name:"verticalSkewing",type:"number",defaultValue:.5},{name:"horizontalSkewing",type:"number",defaultValue:0}]}),u='\nlet centerX = params.centerX ?? 300;\nlet centerY = params.centerY ?? 200;\nlet color1 = params.color1 ?? "#FF0000";\nlet color2 = params.color2 ?? "#FF8800";\nlet radius = params.radius ?? 15;\nlet numCircles = params.numCircles ?? 25;\n\nfor (let i=numCircles; i>0; i--) {\n  let even = i % 2 == 0;\n  ctx.fillStyle = even ? color1 : color2;\n  ctx.beginPath();\n  ctx.arc(centerX, centerY, radius*i - radius/2, 0, 2 * Math.PI);\n  ctx.fill();\n}\n',i(["other","backgrounds"],{name:"Concentric circles",func:new Function("params",u),source:u,params:[{name:"centerX",type:"number",defaultValue:300},{name:"centerY",type:"number",defaultValue:200},{name:"color1",type:"colorHex",defaultValue:"#FF0000"},{name:"color2",type:"colorHex",defaultValue:"#FF8800"},{name:"radius",type:"number",defaultValue:15},{name:"numCircles",type:"number",defaultValue:25}]}),u='\nlet width = params.width ?? 20;\nlet height = params.height ?? 20;\nlet numRows = params.numRows ?? 20;\nlet numCols = params.numCols ?? 30;\nlet color1 = params.color1 ?? "#FF0000";\nlet color2 = params.color2 ?? "#FF8800";\nlet startX = params.startX ?? 0;\nlet startY = params.startY ?? 0;\n\nlet canvasWidth = ctx.canvas.width;\nlet canvasHeight = ctx.canvas.height;\n\nfor (let row=0; row<numRows; row++) {\n  for (let col=0; col<numCols; col++) {\n    let even = (row+col) % 2 == 0;\n    let color = even ? color1 : color2;\n    ctx.fillStyle = color;\n    ctx.fillRect(col*width + startX, row*height + startY, width, height);\n  }\n}\n',i(["other","backgrounds"],{name:"Checkerboard",func:new Function("params",u),source:u,params:[{name:"startX",type:"number",defaultValue:0},{name:"startY",type:"number",defaultValue:0},{name:"width",type:"number",defaultValue:20},{name:"height",type:"number",defaultValue:20},{name:"numCols",type:"number",defaultValue:30},{name:"numRows",type:"number",defaultValue:20},{name:"color1",type:"colorHex",defaultValue:"#FF0000"},{name:"color2",type:"colorHex",defaultValue:"#FF8800"}]}),u="\nlet component = params.component ?? 'r';\nlet value = params.value ?? 256;\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet imageData = ctx.getImageData(0, 0, width, height);\n\nlet offset = 0;\nif (component=='r') {\n  offset = 0;\n} else if (component=='g') {\n  offset = 1;\n} else if (component=='b') {\n  offset = 2;\n} else if (component=='a') {\n  offset = 3;\n}\n\nfor (let i = 0; i < imageData.data.length; i += 4) {\n  imageData.data[i+offset] = value;\n}\n\nctx.putImageData(imageData, 0, 0);\n",i(["color","filters"],{name:"Set color component",func:new Function("params",u),source:u,params:[{name:"component",type:"string",defaultValue:"r"},{name:"value",type:"number",defaultValue:256}]}),u="\nlet x = params.x ?? 300;\nlet y = params.y ?? 200;\nlet width = params.width ?? 100;\nlet height = params.height ?? 80;\nlet depth = params.depth ?? 50;\nlet horizontalSkewing = params.horizontalSkewing ?? -0.5;\nlet color = params.color ?? \"#AAAAAA\";\nlet borderRadius = params.borderRadius ?? 5;\nlet embossAmount = params.embossAmount ?? 3;\nlet embossColorDiff = params.embossColorDiff ?? 1;\n\nctx.save();\nctx.setTransform(1, 0, horizontalSkewing, 1, 0, 0);\nctx.fillStyle = color;\nctx.fillRect(x, y, width, depth);\nctx.restore();\n\napp.executeSampleScript('Grow',{amount: borderRadius});\napp.executeSampleScript('Emboss 2',{amount: embossAmount, colorDiff: embossColorDiff});\napp.executeSampleScript('3D effect',{numSteps: height, dxStep:0, dyStep:-1});\n",i(["3d"],{name:"Draw isometric cube",func:new Function("params",u),source:u,params:[{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:100},{name:"height",type:"number",defaultValue:80},{name:"depth",type:"number",defaultValue:50},{name:"color",type:"colorHex",defaultValue:"#AAAAAA"},{name:"horizontalSkewing",type:"number",defaultValue:-.5},{name:"borderRadius",type:"number",defaultValue:5},{name:"embossAmount",type:"number",defaultValue:3},{name:"embossColorDiff",type:"number",defaultValue:1}]}),u="\nlet text = params.text ?? 'play';\nlet buttonX = params.x ?? 300;\nlet buttonY = params.y ?? 200;\nlet buttonHeight = params.height ?? 40;\nlet buttonWidth = params.width ?? 140;\nlet buttonRadius = params.borderRadius ?? 10;\nlet textColor = params.textColor ?? \"#FFFFFF\";\nlet buttonColor1 = params.buttonColor1 ?? \"#0000FF\";\nlet buttonColor2 = params.buttonColor2 ?? \"#00FF00\";\nlet font = params.font ?? \"24px Arial\";\n\nlet gradientStartX = buttonX - buttonWidth/2;\nlet gradientEndX = buttonX + buttonWidth/2;\n\nvar grd = ctx.createLinearGradient(gradientStartX, buttonY, gradientEndX, buttonY);\ngrd.addColorStop(0, buttonColor1);\ngrd.addColorStop(1, buttonColor2);\n\nctx.fillStyle = grd;\n\napp.executeSampleScript('Fill round rect', {x:buttonX - buttonWidth/2, y:buttonY - buttonHeight/2, width:buttonWidth, height:buttonHeight, radius:buttonRadius});\n\nlet width = ctx.canvas.width;\nlet height = ctx.canvas.height;\n\nlet tempCanvas = document.createElement('canvas');\ntempCanvas.width = width;\ntempCanvas.height = height;\n\nlet tempCtx = tempCanvas.getContext('2d');\n\ntempCtx.font = font;\ntempCtx.fillStyle = textColor;\ntempCtx.textAlign = \"center\";\ntempCtx.textBaseline = 'middle';\ntempCtx.fillText(text, buttonX, buttonY);\n\napp.executeSampleScript('Grow', {amount: 1, context: tempCtx});\napp.executeSampleScript('Add color border hex', {amount: 2, color: \"#000000\", context: tempCtx});\n\nctx.drawImage(tempCtx.canvas, 0, 0);\n\napp.executeSampleScript('3D effect 3');\n",i(["buttons"],{name:"3D gradient round button 2",func:new Function("params",u),source:u,params:[{name:"text",defaultValue:"play"},{name:"font",defaultValue:"24px Arial"},{name:"textColor",type:"colorHex",defaultValue:"#FFFFFF"},{name:"buttonColor1",type:"colorHex",defaultValue:"#0000FF"},{name:"buttonColor2",type:"colorHex",defaultValue:"#00FF00"},{name:"borderRadius",type:"number",defaultValue:10},{name:"x",type:"number",defaultValue:300},{name:"y",type:"number",defaultValue:200},{name:"width",type:"number",defaultValue:140},{name:"height",type:"number",defaultValue:40}]})}});